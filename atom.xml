<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[XguoX]]></title>
  <link href="http://xguox.github.com/atom.xml" rel="self"/>
  <link href="http://xguox.github.com/"/>
  <updated>2013-12-10T14:48:03+08:00</updated>
  <id>http://xguox.github.com/</id>
  <author>
    <name><![CDATA[XguoX]]></name>
    <email><![CDATA[golvinlu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Diary: 22 西涌]]></title>
    <link href="http://xguox.github.com/blog/2013/12/09/hello-22/"/>
    <updated>2013-12-09T21:45:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/12/09/hello-22</id>
    <content type="html"><![CDATA[<h3>前奏</h3>

<p>原本是要长叹自己从20岁病到现在22了。发觉消沉的东西太多了，还是不发神经扯淡了。<br/>
不是特地计划生日当天跑来深圳大鹏半岛这边。不过我却的确来了。<br/>
<img src="https://gagqnq.dm2303.livefilestore.com/y2pT6h43owO8EiTn6o9VHIg_p1PZomemBlxe-o6GH_DAMWAQcps5K1JoPpwYwV-pdCzSE1slV7PIVMR7E79K9wzwbVAftwBQ97UuQalra2S5cY/5DFEE622-D112-4EAD-9ABD-40C4DB871E2F.png?psid=1" alt="" /></p>

<h3>路途</h3>

<p>在车站搭招手就上的惠深城巴。</p>

<p>网上说在龙岗天虹可以坐车到南澳再转车去西冲。但是我在龙岗车站天虹那边蛋疼了好久还是没找着。最后是搭818到大鹏站再转M232到鹤薮村，略蛋疼了。这路程耗时比我从惠州到龙岗天虹还多了去。</p>

<p>再次感慨这个拿了3年驾照还不会开车的老司机，要是自驾的话会很不错的。 南澳到西涌那段山路被司机刺激了一番， 一般人在那段路开的可能会略吃力， 但是当地的这些司机那是杠杠的，各种加速超车急转流弊哄哄的。</p>

<p>住宿旅馆是在鹤薮村这边，「薮」字一堆文盲不知道读啥音， 其实我也不知道， 不过我在手机上猜读「sou」于是一次中！</p>

<p>到了村子，还等老板开电动车来接的说。老板是河源人，于是难怪口音听着都差不多。没一会咱就扯上客家话。村里边估计90百分之都是旅馆，现在是淡季， 旅馆什么的也比较便宜些， 基本都是旺季价格折半。但是，找吃的好难。好不容易看到吃的。还贵的113，据说还难吃。</p>

<p>于是自己买菜在旅馆老板这煮。
<img src="https://gagqnq.dm2301.livefilestore.com/y2pcLdJI8nMKdBW_cNhnJjCwh56F6qOZhMFk0SZtjHIQYVYsFYM9jwG56zm51--fv-sdPmMwTJ3kjuAFvaRsCkUDhUjm1A6ln54iG59Svg32t8/DSC00499.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm1.livefilestore.com/y2pd3ErZ8OCuD7qiCug02mui-CF3Vu6bJVjQR_jo0p0wZfxzDDSD2DQTrl7A_mI38XbP-DeW3hVsGYTCowOqA_AQgBCx7tVunZUQteBuXHi_lA/DSC00504.jpg?psid=1" alt="" /><br/>
213青年欢乐多啊</p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2p5FghB-a1jG1zRohmmdFk0YnYrGqO9HYsUCSZht3Q4KM5xWJCUwwe0MIitVNHTD8BPVhrJNJCe1Ik-el3v4EuP2YXBFi-52JcVZ6zQW-3m-c/DSC00513.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2301.livefilestore.com/y2pfRXdDcl4CBltbsDFeWutiU-S8WmlbOzJ753q_HNiK844LIp9C28zqM-E0iOjbEvwVxUkLQFoH_TfKKgeFRniXupIv1JFo0DvJ-cHnrFODsM/DSC00515.jpg?psid=1" alt="" />
好男人就是我 &mdash;&ndash; 拍照的那个</p>

<p>开吃也要撸几发
<img src="https://gagqnq.dm2303.livefilestore.com/y2prWqbgQBfdXnt53di793Kby9LpEc1k6F4HyaUBLe3pfjgfvCUYfTgkGO1yO1iWu2PYT8Ck1FgFW8ZY6yCfXemypMiPYKwdbG6gzUQUWbP5eU/DSC00516.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2302.livefilestore.com/y2pOnmQQGJZY-Hmfaj9eFcPGv-ZQ8UKP8kvD1upWayZ_D-p1erLOzOAoCJiKBFmllD6dm1lccvptQ79fUIHcM03xnfbiwlUCbBiw8F3giMKhe8/DSC00517.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2302.livefilestore.com/y2pRGsDI_Mumvk4H6ClDbCD-WPGFuGsl6HhqLfDsUiPGHuxxtgj0CC-iZu0UdhfaWHWshKykUKLu0x1Wmh59GLCNIPYMv_PZ3z9NG__3CmcNPE/DSC00518.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2304.livefilestore.com/y2p0seM2KAqi5ByT9VzSB3jHNsLKcko96ULaKFnGzkQJTTQ7BMe7BRsTSj2rsNeRAhvtQUBykcStSEsW7LSdJP4YDgiMBOr2OCC9VbQsA3Wusw/DSC00522.jpg?psid=1" alt="" />
吃相真™猥琐</p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2pw-eSDDpT31TndLqOzQ052h2ljI5TJD_sJG95nIcCcvR07QE2G0rVYe7Zs00GlUVrSli2IJMVvxyCsZrdu7dMsefPCv20tCU7-JNRy5M9QUI/DSC00526.jpg?psid=1" alt="" /></p>

<h3>海边</h3>

<!-- more -->


<p>一路奔波， 填饱肚子后都4点好几了，不等休息就开始杀向海边。</p>

<p>10蚊鸡的票
<img src="https://gagqnq.dm1.livefilestore.com/y2pJSDDSHfOuPivJxkLRrybJ8KwDz8PaysbdyDqblMgBvgjEfna9VOLbGE-uhoS00DJzVwrf1Ra2Fpye7dyvV9KRTPjP0TFKTCrw05vhvQ_9BY/DSC00527.jpg?psid=1" alt="" /></p>

<p>人不多， 但也比预想的略多，主要是这天气，居然12月份了还没冷下来。这天气最多算凉爽（知足吧，要不是淡季， 那看人就够了）
<img src="https://gagqnq.dm2302.livefilestore.com/y2pHtPK00FcstXFyTkbAUl_P1Z-LurjPaDaJtI50Unv2BhKxQqfwqsSk7PqnKd4Nc73dPB9178lRGj_R-pmCrhHCwrajDhMtURlG9YYPv11nVc/DSC00545.jpg?psid=1" alt="" />
没过一会人就越来越少了。</p>

<p>我能想到最浪漫的事,就是&hellip;
<img src="https://gagqnq.dm1.livefilestore.com/y2pC0wWNh3VSzj5tKKmkmMpMDW7hwLHNFmPspA5oHQlA-QVybv5nL_Kl72LjOhUTi4kylySOySOLfjVzlBax2KbHWjv__iVnvftNn7jdRaMPpw/DSC00531.jpg?psid=1" alt="" /></p>

<p>我总感觉我经常看到海，但是却想不起上一次看海是什么时候了。厦门的？没有那么久远。大亚湾的，也不是吧？ 在上海貌似没到过海边。广州也顶多是在江边。 额&hellip;上一次看海好像还真的就是在厦门。</p>

<p><img src="https://gagqnq.dm2302.livefilestore.com/y2pWokPd6yeS9JgHdZIyyVVnC7gNihXVV6THHymuF-ovT_qQL_Wx5nBiFRx_GyGC-cxJMztaNhY5os7wW-qMQ4G7td4rLzQNVKzOPQw7yYqps4/DSC00538-2.jpg?psid=1" alt="" /></p>

<p>脱了鞋子踩踩沙子东拍拍西拍拍&hellip;其实吧，我感觉我真心太过care拍照了。单论玩，其实，不单是这一次，往前的好几次，感觉我都只是在拍照，没有enjoy进去。某些个点，想要拍张照片，架上架子，这构图不好，那曝光不对，还没对好焦&hellip;折腾折腾之后，其实景物留在我脑海的印象不深刻，至少我觉得不如与我同行的两个朋友深刻。他们是先感受风景特别需要时候才会掏出手机或者卡片机， 而我是看了一眼之后就捣鼓半天对着取景器或者LCD。</p>

<p><img src="https://gagqnq.dm2304.livefilestore.com/y2psIy8_wZow7DEsk85JHPCFEf1p7S-5weKUApDTfw7Iz94zbISMr4U8YEC_BuJg9URFy43-MhVQRIsAZrFHLeZmhi52u2zCC_DcDbmEXQUsKU/DSC00548.jpg?psid=1" alt="" /></p>

<p>这次更不可理解的是，在没有ND/GND的情况下，明知各种过曝也还是执着着要营造丝绸流水的效果，  结果就是脑残了， 远端天空什么的过曝过的吐， 死白的地方一片又一片，尽管我把光圈缩到F22，把ISO拓展到50。 依旧抵挡不住过曝的打击。 可能遮黑卡的方法可以解决这问题， 只是当时候身上没有黑纸之类的能使的上（后来想会不会镜头盖其实也可以拿来勉强当黑卡呢？）  <br/>
朋友看了照片还赞以为什么云端仙境，云雾缭绕了。
<img src="https://gagqnq.dm1.livefilestore.com/y2pwuJe2GNPCI7OBkLq7gGPyvmnMrpRjsNSjENs3K2aXbFGxSY347OL7x-73C2hjgFXoq2wCbuXvLLKUB0ly3i9xHHdFPZqVmIVhC0UwrUT3x8/DSC00588.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2303.livefilestore.com/y2pG4MWYuzrTS3Iy3k9Ou2N-z2EbFOE5z23k2j6SM0iGL5vonGU8EZb283BNjVZsvMLchYoEx8hnLsVJ3LWsaEQ6gvaS70O90pZS3Av7l7Fz8Y/DSC00590.jpg?psid=1" alt="" /></p>

<p>当时的确天空灰蒙蒙的，但是也不至于我拍出来这样的死白， 完全是因为过曝的原因。</p>

<p><img src="https://gagqnq.dm2303.livefilestore.com/y2pwlnuQ-GvGk8xIbsqime8VGEZeB-P8JJXm20LKNcrn8Fe5U7TyTFUddSsPG3ZoQwCwkAA4UcQIBw_16QJ1Z9DUBhhh9CHC1KyLhumOfj4oCc/DSC00592.jpg?psid=1" alt="" /></p>

<p>可能在他们眼中我拍的那些只要是清晰的就是好片，但是，再我看来却各种问题，过曝的死白，欠曝的死黑,色散眩光暗角什么的。
比如这个， 原本是想帮他拍张剪影， 结果iso一直调在了auto，然后飙到2000，傻逼了。   <br/>
<img src="https://gagqnq.dm2301.livefilestore.com/y2p8wGvKY0RyrzRaXLgqwEgWg1hJcRJeQV3oa6BbjlpG37jvn5bxpgF-Ccr32sj7O59Zdrzv-pn6n-toc1n2EcHBtSU7K3L2Jttwj9aSDKulTc/DSC00552.jpg?psid=1" alt="" />
出片满意率每次都很低。 然后回到电脑前整理照片就是各种删各种修。有点为拍照而旅行的谬误。</p>

<h3>夜晚</h3>

<p>到了晚上， 人就更少了，除了岸边上那些烧烤档有几波烧烤的之外，海边上的也就零零散散的几个在自己的可见范围。
走了大概1/3， 看到这么个玩意，
<img src="https://gagqnq.dm2304.livefilestore.com/y2pvZNQYcOB6gXxMVJdrq92zyjsxSsyaoCQF87T10hxNyCNYwP_Umkpa-3Bsrb1pF7vfcLUa_m19usxSvJHevkCAva_lWV2KNSQ7V-V9UVJCiI/DSC00617-2.jpg?psid=1" alt="" /></p>

<p>艾玛， 真好精力，拍个照到此一游， 这个大作就是我的了XD。e&hellip;我说你能更烧饼一点吗？=。 =</p>

<p>答：能。 请往下看。</p>

<p>先配上经典的BGM</p>

<p><audio controls><source src='http://m5.file.xiami.com/258/1258/6610/375918_14519_l.mp3?auth_key=5205b0c11bb45c41a17eee70ee248618-1386683095-0-null'></audio></p>

<p>开始放大招&hellip;
<img src="https://gagqnq.dm2304.livefilestore.com/y2pwNiiRN6cW5i-TzXo3vbJqEjpz8PJM_31Yj5aj8HalIaLsa8IiMa9FDQb5sJk0yLt0P_NzONtIOt2k7QzoFhO1MLAKjEh3b2yybrqhu_Unmk/DSC00622.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2303.livefilestore.com/y2p3M0HChPD7g_qjbVm_MFws0P0P7y9LiVhZZvCRXhUUzvJ3Sk_r0xaxEYyooJrIA2Uik_mXwrfHY7ETDnVEJUNA4GpvftuvmawIokC4F_S0Ho/DSC00623.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2301.livefilestore.com/y2phSsgWdsh9amoCMk3tw4ZuYv9xfkvt9fgyFF57A3UoUClZ2qHABr5hbNySogjbXhe9mlXrBXEI0aKA5NT6EUyv5nnWV6P3sHSVl6dHDoETug/DSC00624.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2301.livefilestore.com/y2pG4H_NxElO-d3Z7SZzUIIdLEJDnujKhD0Oe-FAfR35BHiC09N9C1zM2ZjAKaf6JUSfBAb1DKA3BtPQLPSTywiTozrcqTL2vj7SyB4kMpYvg0/DSC00625.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2304.livefilestore.com/y2pyR2RMbvUW0ZQjbPK7JTgGWwkdjNZV8wYzI5Cj7bbtuPmdr6IPa4R-UbSl56Nz2vdHH_yaoksN1Q6ngXVLOQJPoyn42BtqHXb8JlMHenbcXI/DSC00626.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2po5WLdyiePeydrREzfEC3xjBrOnf4SvMg3JWT3a-9EM7ZyRHy_X7ueEWgYEadiwX6lzrlGz1feoktmCbi0sFG5bWAB4g38OR9Cl5sc55NKIw/DSC00619.jpg?psid=1" alt="" /></p>

<p>烧饼就是这样炼成的， 最后照片是反过来的 ╮(╯▽╰)╭  还是没修炼到家</p>

<p>话说到这里已是8点多，并还木有吃饭，只好到岸边那些餐厅让人宰了去，好吓人的餐牌， 鸡： 98/半只。 随手点几个迟了滚蛋回去。
<img src="https://gagqnq.dm1.livefilestore.com/y2pfg6tPLYTz6XsHbaoEzP4BIjQGHmFQx3sph6sG-51b-1Y9WYISknE-TOnf65rwhA14mX71D5Fg4Tepurhm9Svg7aku90PrO1Hm1ehFJmR70I/DSC00639.jpg?psid=1" alt="" /></p>

<p>回来路上无意间抬头发现星星巨多， 于是赶紧的回到旅馆没休息几下奔上楼顶就撸了几发
<img src="https://gagqnq.dm2303.livefilestore.com/y2pDe9321asrwXsHSv71hMYr7IWzecsbc4NMrc27UPEZnHT_ZRvYswJmmfOYRlREaMFPRLMhcrVyB9XXIegBW8ohe85H2TpIGePetv_jG-u0tE/DSC00642.jpg?psid=1" alt="" /></p>

<p>考虑到下边要过曝，于是拿镜头盖挡了挡， 技术不到位， 结果月亮让我拍成了太阳
<img src="https://gagqnq.dm1.livefilestore.com/y2pp7mAJGSbxpHYrjuN4t7MoWp7-Suby3Dp6V987_MMt6Z64gq-k6sk5j_oQ-nF63KtFdGvQ3ryRb7niJN6XVe_pSfibZEcAylCQde6DM4A3Bo/DSC00647.jpg?psid=1" alt="" /></p>

<p>没有拍过星空星轨，没有快门线也难拍， 加之，要曝上一个小时什么的话，我没倒下估计7R的续航就要趴地了。<br/>
死要装13跑前面去又不露脸，强忍着不动但是细微的晃动还是被相机抓住了，人糊了。  <br/>
原本飘着的几个孔明灯还以为可以添色几分， 结果感觉还影响了我的画面</p>

<p><img src="https://gagqnq.dm2304.livefilestore.com/y2pHkOwDe5Niv1UiHg4whfIOJBkaYIvUSMwdKldJxxTm8ZAL9DmyG891nCMepVH8HFjmDMKBxEh2Kjes0uU4VoGNVFlfzZktTOdFpgmuon_rOM/DSC00654.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2301.livefilestore.com/y2piFUYYpXwKeJhTJep02RuTMBYDuCr9J5pBPJVIWW2I8dl4PUN01IVYBlyWFxIbfBMdeP8XdLRu9oHZX16HjyfxmzQu1DaFsjgRXfReyqcVQ8/DSC00660.jpg?psid=1" alt="" /></p>

<h3>次日</h3>

<p><img src="https://gagqnq.dm2303.livefilestore.com/y2pV4x07-QBeDl6dX97ylHiqRKaQaduEeDBUVIQb2QwR_vnPMDiAMODWdcSlbv1C0p3wv-6pXoVsC-4PR1AemcNiyttYjNIroT8AeBDbqMaZNw/DSC00677.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2303.livefilestore.com/y2p61qa2YKj4_gxMz9INElAA_2ozpqs0yvrIJyCAO3uSzlmY3CYjGPpkmSLYhnFOhv_UovWKoZtX6pW3hEOnfXBROd9NNW1Ip9l_aWoehE9aqw/DSC00714.jpg?psid=1" alt="" />
一早， 原本是要调个5点半闹钟起床到海边看日出，结果是傻逼了日出不是在海的方向,而是在山的这一边（顺便鄙视一下赖床到6点的家伙！）。 与预想的朝霞映海的景观相去甚远， 海上依旧云雾一坨接一坨的。 而且退潮后岸边淤泥+大片大片的青苔， 不好看！ 于是 继续把剩下的那一大段海岸线走完（有接着走这样的说法？其实还是重新把整个海岸线走一边）。</p>

<p>天空被我后期撸的有点假=.  =
<img src="https://gagqnq.dm2301.livefilestore.com/y2pHK2HG0r9lg02GoUGDghXUDhpwG0lC1yYd8QLjA6apd2LIjVvElyDzsLT7shYukvRy_62XvwpmjX6Nm8Hbal0mlFyfKxBNYDMRlOfjEADVDg/DSC00703.jpg?psid=1" alt="" /></p>

<p>走走停停
<img src="https://gagqnq.dm2302.livefilestore.com/y2pBYD_aaDjprf9KYU_u_zYMM1SckqfWIXw-FHwXbWoIQ4mRHm47H5za-sH1VAH7hn8K1rS-WuMRXW9SzGtsGkCYPJLe2Jg_HqqubbMqUavgvk/DSC00709.jpg?psid=1" alt="" /></p>

<p>拖鞋埋了光脚走
<img src="" alt="" /></p>

<p>这一走就是从起床走到了正午2点。走辣么长的沙滩真Y累人， 一脚深一脚浅的， 最要紧的还是鸽的三脚架扛着走，那个重呀！而且裤子被海水冲湿了大半截， 裹着沙子拖沓着更是走的我蛋都碎了。要不是路途上找点乐子拍下照， 纯走的话我早就要打退堂鼓了。</p>

<p>来张黑白的文艺一下
<img src="https://gagqnq.dm2302.livefilestore.com/y2pogHexUv0Mm5GesP8spt1YiX2tIh-B7c4Px5oLPVm4_LTzpUfkdF4STb6D5SB__-y7H9zfOCX8Q0nS6WAjL89YOT0xlpfqtO84UW4I4fcvc0/DSC00723.jpg?psid=1" alt="" /></p>

<p>继续装
<img src="https://gagqnq.dm2304.livefilestore.com/y2p3o57nUdFAGtU2UtcDh8y2Yt4ovzqTybQSAKFMucVQiEt5B1G0bXorGV7O-1oX4zAttXtWWnhNCiIZlsTihUWLOMUShzwK7rPDs5Go6jODrg/DSC00726.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2303.livefilestore.com/y2pmxOzbwRV6VXTmu0Cg_9Ofy_npSkScE_nun5jfPkkCqa7a_TfRsv_NOaKi-NPV9BRy7Bsb1BSRRX9Ox6-Zv9YmBCl3KQtCXMqJbZYzwTwYYs/DSC00730.jpg?psid=1" alt="" /></p>

<p>小风小浪
<img src="https://gagqnq.dm2302.livefilestore.com/y2p7_iAbWPjrQ-SgT2FA6N1v3_V1x9ME1-dHDYgoitKqijmRpZV4bB4f_4YLuvcPhjoN49dCfHhvoLAeD_m9talQsXI-IELA-LD0XrhIR_n20E/DSC00738.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2302.livefilestore.com/y2pXBI8mvTG9kldKoAFvLBQj_uYPe5zTZhtZdHPjSdys26lihRgJHgMHBXIUMUTyTwMO0-mjFK0ZmRUmDRCHna1yxDNtH1efRE5ktVIiH9-myQ/DSC00745.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2304.livefilestore.com/y2pV-TkvjyiPT6PmzE--NkaWY0oB99wIdm8Tdev0lIpVzTDb3uaRMfM16HD6sNTWrgW95tDmOnGiLQW3k1R-HVy7SMo_Jxtxl1ubMUM1y8Clcs/DSC00748.jpg?psid=1" alt="" />
看这剩下的路程还有那么一大段,其实我们在担心的是,回来要怎么办 = .  = 走了半天,回头一看,发觉没走的那段比走过的那段还是要长那么的多!!!</p>

<p>停下来装装逼
<img src="https://gagqnq.dm2303.livefilestore.com/y2ptmr53NBM6_4fbY83_RbUc-4YX6kkLBqB9w_wIiTU12BW-KVH0sDrvC-Qasnp38y4x-EiYDmYGiCjw_8howc6daDnPw7z7VMVrSpCuBX1dJ8/DSC00750.jpg?psid=1" alt="" />
<img src="https://gagqnq.dm2303.livefilestore.com/y2pNiQ4Ki3nq3OPFXoxHaKn9JHtBXWN4aDS8upfjURN5RHJRe-H8O1df38bKsmRL7chcqQsb-o13V4vMFZyFbb5oA_VF5R0SP6whRz6WeubBKA/DSC00753.jpg?psid=1" alt="" /></p>

<p>Y的抢我的装逼位置
<img src="https://gagqnq.dm2303.livefilestore.com/y2pepyXG_FYWw_eJtQ0aG3Qbi0w9x3BaESqOQs2StZnVgKp1qeGyFIkNb_LmmDfRqEackmgAUx-NJoJiSA2zqOuUvGPPiWCuKQgA3tmMhzbKjc/DSC00755.jpg?psid=1" alt="" /></p>

<p>你又来凑什么热闹!!!
<img src="https://gagqnq.dm1.livefilestore.com/y2pXeEBJleg18bL68rz9OR1T6lvM4Lpc0FmDpliJK4v5E3PU4h-BGjg-5a3q3yRWbbZYj6q5g8hI3AQOqrKzb931daAsCtLHRSb6rcO53M7fE8/DSC00760.jpg?psid=1" alt="" /></p>

<p>装X无底线啊
<img src="https://gagqnq.dm2303.livefilestore.com/y2pTzM6EEo_iuGAydhC1TIRlLxbkY2RYsPf0PtHewkNOcu5oPAVWVYkj_BDg0-98DRmjqCMmdw3ja-yVPJSY80m8gvAuvY1U4zLw4A7ZMab-_M/DSC00769.jpg?psid=1" alt="" /></p>

<p>快要走到尽头了
<img src="https://gagqnq.dm2302.livefilestore.com/y2pBAqXNlYWrNNgACK9Ry6cMm9dAhLcn5uhfe0-3BzCr7Xy9Kov0Ez5Tov8t0AjhCQQf3R94gHH-_vo1p0RJFLfwb-_TdfJXHELROTGJVJ_rfY/DSC00772.jpg?psid=1" alt="" /></p>

<p>最右
<img src="https://gagqnq.dm2304.livefilestore.com/y2p4jdZeIE7MDtBYz08y0yCScEuzksF1iHJtsiDfJy-OzPWblBlDwv_vZPMkxwde0g1UydQZv6l4S5QVH91RxENaru3CbinAvVBRVDW80Ys_YQ/DSC00781.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm1.livefilestore.com/y2pbY80YvyahYHKwVPG1F43-O7vGILHtRI-1OFIANN5xcsP1zgQC3-VsKbKwvt3LIsgV4GYi7_vLr1Kln9upLeg7J_AqHAiDw_FZ6xbMBSUefQ/DSC00783.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2p-aD3YLG-EMDUUTaVE_eLFLhCFBTQek3SYXN-5VMkJyS_74acovV6N3LsX_ZsJYkzzhkhd5gtu4exJa5i50CNtTaTFlrm1_ch7dFj57zEAFU/DSC00787.jpg?psid=1" alt="" />
这下返程有的好受了。</p>

<p>因为拍了段视频，结果7R的电池到尽头那会就刚好歇菜了。移动电源撸上！</p>

<p>出来了也不忘拈拈花草
<img src="https://gagqnq.dm2304.livefilestore.com/y2pI9_zfpqxJk6BrnwC9xgkKa3n8GjALUZsUaohj3AgyyBC718wNpW60Y3B7Ni7s1eIn08-A9Jm8qj3BeFqHZXUtN8gSaHUYgtVXp7pakREbKE/DSC00794.jpg?psid=1" alt="" /></p>

<p>能不要辣么浪漫嘛！
<img src="https://gagqnq.dm1.livefilestore.com/y2pkjNK2Wy4y1ZL7Uh2KiQpFg4Yv-iFWXjtBsCaOra870Rittkhr2GqMrdSEVu9ECjpsf4kcex-pi1-8AvdsYSJnJHU48R1iYCe-bv-jE5gJpM/DSC00791.jpg?psid=1" alt="" /></p>

<p>回旅馆收拾滚蛋<br/>
<img src="https://gagqnq.dm1.livefilestore.com/y2pzmfmgUPTtWEt8-BLRHnh5YqOyDb3m3ibjsPvCElNrLMe3U8VxE0K0PMVI3Dc8TXDszSEeHj_k2tjrFhFJyHCo32Bu7TOYy_mBapxuVmrbTQ/DSC00799.jpg?psid=1" alt="" /></p>

<p>脚都走软了
<img src="https://gagqnq.dm1.livefilestore.com/y2pZC2NVCt0QL-oon3CgG1gD0fR5fM0LuUFw8BDO1wkSEE-cjFkmrlGjDVUrHl44R2h9JRJiwC1DwmU4i96hhlGyeMht_8HGVLyrmDn3d9BMY8/DSC00800.jpg?psid=1" alt="" /></p>

<p>吃饭时间，
<img src="https://gagqnq.dm2301.livefilestore.com/y2pi0ehmr246W8cK2_w7AiGy5z3oiVvLSpc8NluqyQ92tzyMfQHzJ4AijKIbtp5a-dFkbrL6aqudhDBSmyiLSl5F6Z5NXo3hdkLM-Suifj_-mw/DSC00803.jpg?psid=1" alt="" />
不好吃</p>

<h3>回家洗洗睡</h3>

<p>比较可惜了，一个周末来了大鹏，那么多的景点只在西涌玩了。 名义上周末两天， 除去路途车程实际玩的时间可能还不到一天。原本还准备去杨梅坑。不过时间各种不允许（其实走完西涌全程来回的10多公里，体力上也也有点不允许， 年轻人，你弱爆了）。只好吃过饭就散了，各自回家。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决 Lightroom 闪退]]></title>
    <link href="http://xguox.github.com/blog/2013/11/28/lightroom-flash-quit-because-of-too-many-presets/"/>
    <updated>2013-11-28T11:01:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/28/lightroom-flash-quit-because-of-too-many-presets</id>
    <content type="html"><![CDATA[<p>接<a href="http://xguox.me/blog/2013/11/14/lightroom-presets/">上一篇</a>, 想着在网上搞了那么多的预设,不用放着也不碍事. 结果没些时间, Lightroom 就各种闪退各种编辑不能.</p>

<p>按理说应该不是跟 Maverick 兼容问题吧,如果那样的话升级了之后应该就会有问题了, 不过升级 10.9 以后没怎么使用, 都是随手的就预设搞定. 没注意预设这点, 只是简单地用 CleanMyMac 卸载了之后重装了一次, 顺手下载了一个 5.3 RC版的来解 A7R 的 RAW, 好吧,我也没怎么用 RAW.</p>

<p>安装过后还是老样子的只要一编辑图片就闪退, 蹦出一个 Error 框来唬人(可以进入 Lightroom,看到图片). 不过奇怪的是, 我用 CleanMyMac 卸载完重装以后, 居然还可以继续使用之前的预设. 打开 <code>~/Library/Application Support/Adobe/Lightroom/Develop Presets/</code> 发现, 一个也没少啊. 这个就奇葩了.</p>

<p>果断把所有预设删除, 杠杠的就可以编辑!!!果然, 不过是预设太多了还是因为部分预设的版本太老或者其他什么的原因?</p>

<p>把之前的预设都删光光了之后一个个预设文件夹的复制进去,发现,有些导致了不能编辑, 有些则直接就造成 Lightroom 启动不能. 更具体原因不明&hellip;</p>

<p>所以说,还是别贪心啊啊, 找好自己喜欢的风格喜欢的调子就好. 这下不能拖延症了啊!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 A7R 玩开箱并各档不严谨不严肃不专业无责任高感测试]]></title>
    <link href="http://xguox.github.com/blog/2013/11/23/a7r-iso-unbox-manfrotto/"/>
    <updated>2013-11-23T22:35:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/23/a7r-iso-unbox-manfrotto</id>
    <content type="html"><![CDATA[<p><audio controls><source src='http://hq.update.sony.net.edgesuite.net/united/clock/assets/sound/a_clock_main_theme2012.mp3'></audio></p>

<p>接<a href="http://xguox.me/blog/2013/11/11/camera-geek/">上一篇</a>, 按理说, 应该是给刚到手新鲜热辣略烫手(都几天了还烫手= . =)的 A7R 玩儿开箱, 不过以 A7/R 这一系列的火爆程度, 开箱文从15号左右开始, 一些有门路的早一步拿到机子的早就开箱18鞭了. 无忌索坛也早早开始就被屠版了(Nikon Df 没开卖就干了四五期也很流弊) 所以不掺和一脚. 再或者说, 从发布那天开始, 就已经不知道多少人高潮过多少次了. (正在打字的那个, 说你呢,眼睛看哪)<br/>
不过不玩细节开箱也来个秒开, 两张流帅照还是有的.</p>

<p><img src="https://gagqnq.dm2302.livefilestore.com/y2pL5yomhWKhPLk9Mh93aX50Mzd6V26hpyIeoYsbDMKzYHLzqynaLkj4FIHSI6xqI5uIzAV3hjdQQo86h3QCXGyEk5SGVX1KZqojnCFmaBBkd0/IMG_20131122_233454.jpg?psid=1" alt="" /></p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2pmcsjYPZNIsyvuqew0VvEH0kks7_jn7oOwAiqlW2bBYXi238KVQ76Tz6rx60C75D2fTIHtgYElzp9x5Gjkn8gWJ_1yz-zwgdF0mE-k0-Ag4I/IMG_20131122_231831.jpg?psid=1" alt="" /></p>

<p>很奇葩的镜头吧, 官方木有 28-70 的配套.   更奇葩的是为嘛在 Skydrive 是正的贴过来就旋转了 -90deg 叻!</p>

<p>在 Google+ 上和人交流起来才发觉好多术语描述不出来(读的话还能靠猜), 什么「拉风箱」「高感」「焦外」, 艾玛, 英文跟白学那样.</p>

<p>最后自己只能憋出这些个评语</p>

<blockquote><p>Love the little metal body ,   so many custom button/wheel  for good manipulation,  it’s tiptop,  and  quite a lot  of modern features, but sigh for Sony didn’t equip it  with touch-screens , or it would be perfect. <br/>
for disadvantages ,seems  that  it is hard to autofocus in dark.
besides , it’s a terrible battery monster.  I am trying everything to make it more durable.
btw, it must take me more time to shoot and review the pic quality .</p></blockquote>

<p>其实还有一车要说只是实在翻译不过去了.</p>

<!-- more -->


<p>e&hellip;..搞半天还没上主角啊 ,  2333333333333</p>

<p>考虑到 7R 的3600万像素, 所以第一时间想入的配件是脚架, 主要是手太抖了,也不知道是不是心理作用,反正手持拍的总感觉不好.  而且,貌似持越轻的东西越抖, 当初还因为这个犹豫微单.</p>

<p>第一枚架子, <strong>曼富图(MK293A4-A0RC2)</strong>. 原本还想上碳素版<strong>(MK293C4-A0RC2)</strong>,奈何贵了近800软妹币, 再一次应验没有什么选择困难, 只不过是钱包困难. 说多都是泪. 不然谁不想用捷信呢?我还想买上10根捷信架子放家里晾衣服叻! 不知道衣服会不会干的快一些 = . = <br/>
这款架子貌似不算新,出来有些时间了, 现在曼富图这个价位比较火的一款应该是 <strong>MKBFRA4-BHCN</strong> (看某猫官方店的销量)</p>

<p>先再次吐槽X通的效率, 然后,终于收到货了.(没有大光圈来虚化不知道是不是让很多人解毒了捏?)</p>

<p>躺平
<img src="https://6grjga.dm1.livefilestore.com/y2pH1uGEFLacgGmmK-r5HxnvJbMHSfUOXW8LjkiAzSQU0U1xqrLLJkVc_zBuAX432NctHsgKraoj2KT784l1PUFkwDfXFs3RnyTwa0Vn723UZ0/DSC00110.jpg?psid=1" alt="" /></p>

<p>站直
<img src="https://6grjga.dm1.livefilestore.com/y2pRjhEG4NsVM_NcyTzNuTP3LgH6qtg27rUOnFSUlCKPASPDduo1GuLXjsDxgZmSDGRI_GvItDtEQaLIQWGdjukHuOMEBBLX7rFz4tGRyXQZuc/DSC00111.jpg?psid=1" alt="" /></p>

<p>褪去最外面的厚纸皮
<img src="https://6grjga.dm2302.livefilestore.com/y2pioE7Q_GCtVt3-8oHR7O-CLEoVGlA-kO-fowuG2dqnw68bhy9zSb3EA0qMkZ2ZIKMM9e-jFUKhUxQP4GE2kGe0YZM3DUTmgm1qmQ3la5FPyc/DSC00113.jpg?psid=1" alt="" /></p>

<p>拆埋内盒,看到半边脸了, 那层白色的包装膜缠着各个脚挺紧的</p>

<p><img src="https://6grjga.dm2301.livefilestore.com/y2ptnq737Yy1wGSxf2QbHtUz_lkPNQ3g7c0RguT56mUGcI9oWQZQ2Xf6UuZB4Sd4J9ny6tXnAXAuWsZiQS9XlUWtvj1GEYLw6vjrUwApJe4sns/DSC00115.jpg?psid=1" alt="" /></p>

<p><img src="https://6grjga.dm2301.livefilestore.com/y2p2r_tzsB0TFQGf_34RhYlLWlUptQpcG-opFOczPrFO0lh5Z2ETBdmVR3q3HmPIuLr3fjVkG5PJXF71vMe2vzPpiCGrp2ggGzbRbYa1pt8G4E/DSC00116.jpg?psid=1" alt="" /></p>

<p>终于见到真面目鸟, 我蛋疼的跑到阳台来一发
<img src="https://6grjga.dm2302.livefilestore.com/y2pVry7hvhn4DwVccwriOs58pNMiaVn3SjmPkpg9Jof7Ma8mFF_qvFcM9fozYFn-V6ZZZJ2D0KTPWAFG5EqNsCzM9AJYPToluO_6c1qAPRadvM/DSC00117.jpg?psid=1" alt="" /></p>

<p>四节升起,额,一定是我打开的方式不对, 这个视角看上去顶上天花板了. 家里房子太矮了.
<img src="https://6grjga.dm2301.livefilestore.com/y2pd7ZU_h5iWScUI2y_vQGGLIY5Ckk8VNkOHYC1Zg_ZZYIdA-YRZNAydx7LRmQ3hb6DkFBOvuWxy7wmQ9sU1p6HlZCucQXScPGNWRdsuvaNUu8/DSC00118.jpg?psid=1" alt="" /></p>

<p>升埋中轴! 吐槽下自己, 折腾了好一会才发现有一个脚的一节没有完全拉伸开来.
<img src="https://6grjga.dm2302.livefilestore.com/y2pKs1yYDZo11pOd2hhNQPDsrmV7yizg0HGs6D7mFwu7zm-PfA2814BrELj0vPqznGAzr3tETy7hSpZnYqtYh1nYV1XaxYnDf5py26cByefFp4/DSC00119.jpg?psid=1" alt="" /></p>

<p>搭上 A7R, 再一次说明,手真抖, 拿手机拍出来的各种不能直视.</p>

<p><img src="https://6grjga.dm2302.livefilestore.com/y2pylJQ72Q8gow17NTyH5Uy_TQWv0C2zVhQUMGy5vIdIIQDunAaiOm6m_9lrX0UqD9xxllun-LIFfncFGRggB1I6VSYpEqAgiV2cK6YRG0j_O8/20131123_165958_1.jpg?psid=1" alt="" /></p>

<p><img src="https://6grjga.dm2302.livefilestore.com/y2p_hLW3NtfKped_G74591GYbXz67sYpgxcMXr3GKuQzKTcMjmklxsff0c31mjK_ClHqgW9fbBv6aUvzq__GrfzWf3EXPU5vt1oNS5uBdCQQUc/20131123_170112_1.jpg?psid=1" alt="" /></p>

<p><img src="https://6grjga.dm2302.livefilestore.com/y2pO8sPFMkTfv00PEs6UFg_rP-Hv8_-TbxQtHDzAPD54VICx83rGshNIm-_51a7UcsxecT8WSTy0GrLWFrBQ-K9wHQjc1IOzBirvOcycIudkM8/20131123_170208_1.jpg?psid=1" alt="" /></p>

<p>三维转一发, 新人用脚架载新机新入手就是心惊胆颤怕摔了.  好多余的担心, 螺丝圈了N圈还怕毛线.<br/>
<img src="https://6grjga.dm2302.livefilestore.com/y2pt8mJTJLlMVufKBNcjd0pTUnvZ0v7LPSB39VBKvMkOH-TTODfQ83T2BY_9jx8JT9plpFaA6t5hjuLBknIhiz5g9eiPY7B16PYX8cfOH8PSh4/20131123_170413_1.jpg?psid=1" alt="" /></p>

<p>局部, oops, 反光了, 没关系,看得到 「MADE IN ITALY」就行了
<img src="https://6grjga.dm2302.livefilestore.com/y2plYCW2gAqEV4xVdQZrLuDZiq_SJjO8tPJCYu-HvkyTm8cgdJZ1kBZMDuVQRwZ7zAW2ac-wqJrA25n2rKacdMcguq8L_L9Mv9meWNq9W9qiy0/DSC00121.jpg?psid=1" alt="" /></p>

<p>无节操自爆, 请不要吐槽我的邋遢装束. 刚开始还在担心高度问题, 结果很合适的说, 看来我高估自己的身高了.  不过 befree 系列貌似要矮上近 10 cm 那可能真的比较不合适了.</p>

<p><img src="https://6grjga.dm2301.livefilestore.com/y2phOVJ61ykb6ijXpeVcp4E46jc2AHOMUGo-nYwWHoXu2fl-gY4csMKnhSsyu933fBAI8KHSObvNVpdaQyCkpP5QA9NJzaopq5La4VMwqqK6Gw/DSC00122.jpg?psid=1" alt="" /></p>

<p>就是不露脸 = . =
<img src="https://6grjga.dm2302.livefilestore.com/y2poDN_Z_i04nVu1epi1LJUQauE1YA4fUP2UWuLWsfcRqAOozr155XuB_F9fbpj27IEkggkBcoXn4fDYsfBVzIWgA1P7qjrpmY_Mqj_4L3THwU/DSC00128.jpg?psid=1" alt="" /></p>

<p>再来局部
<img src="https://6grjga.dm2301.livefilestore.com/y2paOQepkzV5R3g-31t5NUN1adXcF9kqF3dTuVIhaz5O1-plJ-v1LCTz8dV2ELNFwako2EuOiwvv-hDq7TXMBuZnPK7LuJQA6h80jwStTY99wM/DSC00133.jpg?psid=1" alt="" /></p>

<p>看官网说还有两个功能, 中轴倒置和两级脚管, 不去拆了, 借官图</p>

<p><img src="https://8gtdrq.dm1.livefilestore.com/y2pi412kA0iuIGLwoqKMXNT8os0_ABaXD4OtGIud5AuctYptzxZ5eaSweQOX_3zH2BAvqIcy3EGhFrL5-k-DaSey98t9_RThrkHsaZ5lET6zLI/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202013-11-23%206.43.23%20PM.png?psid=1" alt="" /></p>

<p>挂在 NG5270 侧边, 高出了近10cm&hellip;
<img src="https://6grjga.dm2301.livefilestore.com/y2pM1lKcAibD0NB54cWnitklq1o9XKOqMNJOAHI1plPVfE5THiAbYL1oTX9JKyQXVYzmcaHepUkSZG1HKUYy7_0u0s8gUnAqkeuoMfC8EHvR3w/DSC00138.jpg?psid=1" alt="" /></p>

<p><img src="https://6grjga.dm2302.livefilestore.com/y2peamA5vPtO3W2fw-9akvQv50E9ueN42PTTps07O2I1Rv9ASJVHgZz6ls0a53A9TpgQPiWUunYm9ciezsGtDjkjLHaNpccekd34bFXfCL-aMk/DSC00134.jpg?psid=1" alt="" /></p>

<p><strong>总结</strong>, 虽然是铝合金, 不过重量也不咋滴(本人体能战五渣),拿在手上感觉挺小巧的.  高度对于170左右的刚刚好, 至于稳定性, 别人用来架大炮都没事, 我架个小微单算啥.  不过, 没有像 befree 那样自带脚架套不幸福. 其余的因为用脚架经验不多, 有待发掘.</p>

<p><strong>最后</strong>是上片 ISO 测试,  的确很奇葩, 现在卖相机买相机都喜欢飚高感了去,  可用都要飙到 12800 去了. 伤不起&hellip;</p>

<p>尽量的控制变量, 如果不特别指明则 ,都是默认的 「高ISO降噪: 低」,「长曝光降噪: 开」. 貌似发到这图都缩了感觉不明显了啊. 原图打包 请猛戳 <a href="https://skydrive.live.com/redir?resid=1C164AAC485FEBA4!1009&amp;authkey=!AGl4JRl4KRNBow8&amp;ithint=folder%2c.JPG">这里</a></p>

<p>好吧,最后下起雨了准备回去的时候才想起忘了关闭 SteadyShot, 另外虽说娱乐测试,但构图没水平线不直, 尴尬.</p>

<p>ISO 100 (尴尬,这张应该是长曝光降噪:开)
<img src="https://6grjga.dm1.livefilestore.com/y2pj7jPpUdGlm0CahvGPA_V42rEPra48y-JqVuHAYtKUsF7tGisRGr9CAw0fAiH2MOGztbjtQNJK7pWfbhNQGrPXQu2SSC0Tk9dyXNzBHmK7OE/DSC00140.jpg?psid=1" alt="" /></p>

<p>ISO 100
<img src="https://6grjga.dm1.livefilestore.com/y2padt2ZIySg7AgCb_rbYEVls2C8hLHezGKobEYvWi0zZJlh_Dkv227LFtKGlpEuAH83uqoUUKNrcDelbQwbFpy0G-I7n-WU0BtaAi4eqgI8EY/DSC00141.jpg?psid=1" alt="" /></p>

<p>ISO 800
<img src="https://6grjga.dm1.livefilestore.com/y2pJk79cyqXl5g1_fA9uguF8-yhozUjjB0s3HTz-cPhfetXirZrwVwLgGbRyjeIzz_KgEhBvzU1J8EtRsCWNQART_29BJRhmPf3TouEMM0WxOg/DSC00142.jpg?psid=1" alt="" /></p>

<p>ISO 1600
<img src="https://6grjga.dm2302.livefilestore.com/y2pXRhZjXreY0_bwLSXKA0vv23MRBycuokF_luXAz4wSvq9MdSbHHNlnzd_aEsCPdIyPbFJfIlZ7-q7mydEmFh3iIWEo-kxwuiNKmLqwcNSXhE/DSC00143.jpg?psid=1" alt="" /></p>

<p>ISO3200
<img src="https://6grjga.dm1.livefilestore.com/y2pDmwG9xNM7uPvk0Xjo9qK_8eS8b2W3E79XWUeK25_hxj9dllOUIKARtwzTThHXHa6f_Sqlt6ctPdgF3INqdtvI612HcgEEmdsBq5fhsBcdKo/DSC00144.jpg?psid=1" alt="" /></p>

<p>ISO 6400  高ISO降噪: 标准
<img src="https://6grjga.dm2302.livefilestore.com/y2p1zi6RogNoezN5vJ1uiQuowRmxB5UTklwbnlwZs1Qp2oHaSok3qw_0ZH3zggRBDeutvKimKrX3ZWuRfUd-thQTN6oq2OFnVBbRPcrNE8R0ms/DSC00145.jpg?psid=1" alt="" /></p>

<p>ISO 6400  高ISO降噪: 低
<img src="https://6grjga.dm2302.livefilestore.com/y2pYGYfN6SYJ3ymTYBh8DnSMQsLYQQz4JGMelutFvZXk9EndVzk2StJMwangPhedrDv2FeMaI0HeGOVbO0p0-dYwgTHj3ZQkVHwN4AZRUo-VM8/DSC00147.jpg?psid=1" alt="" /></p>

<p>ISO 6400  高ISO降噪: 关
<img src="https://6grjga.dm1.livefilestore.com/y2pPplI0Pa6SIO8hfRZKjRor8vO2dqeQDspyJTAaqyi2WtG-921KfM9jhVTl1vI0uonqYStgc4ZO9mW5LLs3lPWMbbXeYsKgFOM0SApnfCkQ3Y/DSC00149.jpg?psid=1" alt="" /></p>

<p><strong>ISO Auto 多帧降噪</strong>
<img src="https://6grjga.dm1.livefilestore.com/y2pusuEOCv2jP-4I_h0RQ9NU1U0-a8oH4nWg8gb7BXtMvokQqzXRhOSy6LVWzrMQ4cOFPvkYX9NKHsVklZn0Up0V848v2hsoDPErnGjYuzlcn4/DSC00150.jpg?psid=1" alt="" /></p>

<p><strong>结论, 没意义 ╮(╯_╰)╭ </strong></p>

<p>更没意义的更高ISO</p>

<p>ISO 12800
<img src="https://6grjga.dm2302.livefilestore.com/y2pm0e-k820PKe-oiLvE86zKpG22w9Pajlkqjal3ggCr7k2Z0kuCKXZTZmtW3CeRK7HxJG8Dbuqx2yaN8kaBYHmQxB2GtsLAyIvNFnAE_IvvlQ/DSC00157.jpg?psid=1" alt="" /></p>

<p>ISO 25600
<img src="https://6grjga.dm2301.livefilestore.com/y2pEFQqdYfZK7jXpR7f2o0B3vIzPfN-KrMpRmuB1GL0H75LhC5ahVrTPDIurXdZALX4HrwpYr5IdP7LUZ-XywiR7muDb_SAB-XHAy9jAmXrDp0/DSC00158.jpg?psid=1" alt="" /></p>

<p>ISO 25600(高ISO降噪: 关)
<img src="https://6grjga.dm1.livefilestore.com/y2pUUC0mCFmLNERUVMMv-k1vmhYaQYBpHouXmIvTD-6X71GR_l6osiSWQudYUqfRLlArASPmrIc_FgZY9zrFkgdPMFHD_83I-EkcfBbHiJQl8Y/DSC00159.jpg?psid=1" alt="" /></p>

<p>最后上张失焦的.
<img src="https://6grjga.dm2301.livefilestore.com/y2pkki75O1BE5NZtPkRki2AYXtOZl7j5xnOvqa9pHHU6Nxm7zNvmm_ygBBA1mhdAhEmU8P5O5Q9V8Ms6feELg-wE862fEUwoQfhAZ0udU7XrWQ/DSC00139.jpg?psid=1" alt="" /></p>

<p>还有被玩到厌的车流长曝光
<img src="https://gagqnq.dm1.livefilestore.com/y2pJ08b2ppOJIFetUKFiKQnMsP82S2OV1fab_LxlLxxEN_jTwHXglFmwmLQBbtBZQt9EwlE3NfEP42CiBVz16xTFF816nMWT39amkOU7P9PzRI/DSC.jpg?psid=1" alt="" /></p>

<p>最后的最后,上一张以前那台 Canon 6D 的8000 ISO</p>

<p><img src="https://6grjga.dm1.livefilestore.com/y2pbrpYIknpkRiqCtIwXDgE5abhtqzjrYjmz-F1XA7XcU-grYNPMWGWGP0do6E9CJZdyrzXkpfUPwM3ts-WCXi6odWDq7u24e0gh1awaBojO00/9496240908_7c78971ba6_o%20" alt="" /></p>

<p><strong>最后的最后的最后</strong>, 吐槽一下,在某大型商场的大门前的靠近马路边架着架子拍片的时候,一个不知道是店员还是保安过来,不让我在那拍照,  然后我问他「我在走过几步刀马路边上可以吗？」.  然后 他允了. 艾玛， 中国人有那么介意照相机吗？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lightroom 预设]]></title>
    <link href="http://xguox.github.com/blog/2013/11/14/lightroom-presets/"/>
    <updated>2013-11-14T10:12:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/14/lightroom-presets</id>
    <content type="html"><![CDATA[<p>在网上搜罗了各种 Lightroom 预设一大车, 目测有两三千个了. 之前都是直接的一坨坨的 copy 到 <br/>
<code>~/Library/Application Support/Adobe/Lightroom/Develop Presets/</code>,   然后好奇了一下用  Sublime  随意打开来瞧瞧,额,原来长这样,好高端,不明觉厉.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">s</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">id</span> <span class="o">=</span> <span class="s2">&quot;DFE17DAE-6240-4CB6-85ED-B41D5B065404&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">internalName</span> <span class="o">=</span> <span class="s2">&quot;Toners-Light Mocha&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">title</span> <span class="o">=</span> <span class="s2">&quot;Toners-Light Mocha&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">type</span> <span class="o">=</span> <span class="s2">&quot;Develop&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">value</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Blacks2012</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">Contrast2012</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ConvertToGrayscale</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">EnableGrayscaleMix</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">EnableSplitToning</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerAqua</span> <span class="o">=</span> <span class="o">-</span><span class="mi">18</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerBlue</span> <span class="o">=</span> <span class="mi">9</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerGreen</span> <span class="o">=</span> <span class="o">-</span><span class="mi">27</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerMagenta</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerOrange</span> <span class="o">=</span> <span class="o">-</span><span class="mi">19</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerPurple</span> <span class="o">=</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerRed</span> <span class="o">=</span> <span class="o">-</span><span class="mi">10</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">GrayMixerYellow</span> <span class="o">=</span> <span class="o">-</span><span class="mi">23</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">Highlights2012</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricDarks</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricHighlightSplit</span> <span class="o">=</span> <span class="mi">75</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricHighlights</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricLights</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricMidtoneSplit</span> <span class="o">=</span> <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricShadowSplit</span> <span class="o">=</span> <span class="mi">25</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ParametricShadows</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ProcessVersion</span> <span class="o">=</span> <span class="s2">&quot;6.7&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">Shadows2012</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">SplitToningBalance</span> <span class="o">=</span> <span class="o">-</span><span class="mi">59</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">SplitToningHighlightHue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">SplitToningHighlightSaturation</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">SplitToningShadowHue</span> <span class="o">=</span> <span class="mi">37</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">SplitToningShadowSaturation</span> <span class="o">=</span> <span class="mi">25</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ToneCurveName2012</span> <span class="o">=</span> <span class="s2">&quot;Strong Contrast&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ToneCurvePV2012</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">32</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">16</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">64</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">50</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">128</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">128</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">192</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">202</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">ToneCurvePV2012Blue</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">ToneCurvePV2012Green</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">ToneCurvePV2012Red</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>        <span class="mi">255</span><span class="p">,</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">uuid</span> <span class="o">=</span> <span class="s2">&quot;1DF2363E-780A-4C26-9711-D980D505BF0D&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">version</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后话说我是不是也可以把这一坨的上千个预设 push 到 <a href="https://github.com/xguox/Lightroom-Presets">Github</a>叻?
顺便当做个版本控制也好, 虽然我应该不大会去修改这些预设 =  .  = 不过传了也没坏处吧. Github 不一定只能放代码的!</p>

<p>其实多也没什么好的, 倒是这搜罗了略有点多,其中一大坨感觉基本不会用到, 而且还经常让人犯选择困难,那样反而更蛋疼. 还是习惯了形成一些自己的风格好. (但是,又很贪心地想把这全部风格都尝试一遍 XD)</p>

<p>不过, 一张照片如果原图就是好照片的话基本上各种调试之后都会觉得不错,  只是看符不符合自己风格罢了.So, 找个时间整理一遍还是有必要的.(不知道拖延症会把这个整理拖到什么时候 = . =)</p>

<p>借了A7 的样片搞了几下, 有一张是原图,不过忘了是哪张了.</p>

<p><img src="https://dehqla.dm2302.livefilestore.com/y2pTJK3tT7W_F1Qo3SbSEscIannTpX0vhG9sU4Q0wDoxRuM8CHZMnrT7PcHJY1TXDOHCIyG_bjwIlJg27YyyefCAmt4zvlQS00f084NnOAaNHA/A.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2301.livefilestore.com/y2pLz4HmEx4IKcbX8Be_51CjD9VHnh8dDbRVAgEJ5c8RCxHsryH68_iUbNSejCSfVo6o52BgnwhZJo4d-dPgRFKm2SrNc83oKbL2sHPFoxYh0Q/B.JPG?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2301.livefilestore.com/y2pHBrLuf1Zih_AfRHRryDmGA4aojfvcqTTGLv22oQi6nIQixCcD38rIYKxlt7kixDc0o1WkMRRps6SIfuffr0BLXVSqmBVoO5qyDwkkltXzzA/C.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2301.livefilestore.com/y2pG1Bv_j8EUGJN6WND-KlCo8c6mg2hgqib4pTdIdgU4wrLI65pqMIYPslE410svRfjFugBOoU3dShMXunfb56kYbY6b68QbHXbfZJ37krKgQg/D.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm1.livefilestore.com/y2pADOmVwG9-_56XkyzGWrnv89cxAXcmuw2xrV4thuuSWmhvHzw17XczFtZCgtX_pqJuTVH2hfiuVA7D5EJ9oOA3Y_ZL7z-_nRWeBR4VarMhpw/E.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2301.livefilestore.com/y2pOA-S3zSmWu3Rlj4PpdgezF9EsYPZIlQCP7ZqKBxec_4OmIalXtfMi9WpcKhiIn8OhGRbVCWED3atgi6wF1uEnghxRA7pL4FHir28zB_bH8g/F.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2302.livefilestore.com/y2pG5Lg3JMGBfw4LtcA3Pb-arIAuVoz3xjGKV3tupPtcvO1Ir07MneGHKBQTEY8z-hSidzywV6beAT6sys9XWPEwUWTRnsHAkfrhzSrFbSUnuQ/G.jpg?psid=1" alt="" /></p>

<p><img src="https://dehqla.dm2302.livefilestore.com/y2pp9KS0kMCqh3vrCMrE8OOOEavAN8qXf7CENdXVcJJxS_mTuQdmffQAT9wwT4Dv27YU5AwNayYVbp_zG4NBPVG7CVTllSTe3akHNMoUAY4hSk/I.jpg?psid=1" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Time Machine & Local Snapshots]]></title>
    <link href="http://xguox.github.com/blog/2013/11/12/time-machine-local-snapshot/"/>
    <updated>2013-11-12T10:18:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/12/time-machine-local-snapshot</id>
    <content type="html"><![CDATA[<p>因为 Air 的硬盘只有 120G,所以总习惯性地 <br/>
 &ndash;  关于本机 &ndash; 更多信息</p>

<p>然后每次都看着那蛋疼的数字,  然后这次略离谱了</p>

<p><img src="http://ww4.sinaimg.cn/mw690/62fdd4d5gw1eaga1xtdgyj20g0057q3c.jpg" alt="" /></p>

<p>有一段时间没 check, 话说之前一般都维持在 30+ G 的呀,奇怪了那个备份是什么玩意, 我明明已经设置了 Time Machine 备份到我外接的移动硬盘了并且基本上一直都连着这个盘的呀!  查询之,才发现貌似还有个叫 <a href="http://support.apple.com/kb/HT4878?viewlocale=zh_CN">Local Snapshots(本地快照)</a> 的功能(?).</p>

<p>艾玛, 这么个备份法我的硬盘要蛋碎了. 但是这玩意是备份在哪了的说? 再查之, 原来是在
<code>/Volumes</code></p>

<p>果断删之,  虽然数据的确重要,但是 已经有个外接盘24小时一次的备份了,除非遇上移动盘跟系统同时崩了.</p>

<p>另外据说可以直接 <br/>
<code>sudo tmutil disablelocal</code> 关闭本地快照,<br/>
或者
<code>sudo tmutil enablelocal</code> 再启动之.</p>

<p>想起前不久<a href="http://www.apple.com/hk/en/support/macbookair-flashdrive/">苹果官方</a>召回2012款 Macbook Air 的事. 貌似那一款的东芝盘有什么重大 bug, 艾玛, 刚好就是我这款, 而且我的这个盘也是东芝的, 如果配的是三星的SSD貌似没事.<br/>
不过其实也一直没问题, 官方说装了个补丁没事就好偶也没啥好不乐意的.  就算无故崩了也还有那高频率的备份.</p>

<p>PS. 影片 + 照片好久没整理了,一直滞留着, 又是一笔大开销, 倒是那个其他还是那么神奇,一会大一会小.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不折腾会死玩相机星人]]></title>
    <link href="http://xguox.github.com/blog/2013/11/11/camera-geek/"/>
    <updated>2013-11-11T10:07:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/11/camera-geek</id>
    <content type="html"><![CDATA[<p><audio controls><source src='http://hq.update.sony.net.edgesuite.net/united/clock/assets/sound/a_clock_main_theme2012.mp3'></audio><br/>
先赞上一个bgm,来自 <a href="http://www.sony.net/united/clock/">Sony Global &ndash; &ldquo;α&rdquo; CLOCK: WORLD TIME, CAPTURED BY &ldquo;α&rdquo;</a> <br/>
那个对焦声音以前听A77听习惯了,现在蛮有感觉的.</p>

<blockquote><p>好不容易把闹腾相机的心静下来,结果前些天又让骚尼君扯动了那片涟漪.A7 / A7R 完全把我的折腾心又搅起来了.这不20号帮牛总拍完婚礼立马把6D出了.下订, 然后,就剩下等待了, 结果, 在我无限接近得到A7的时候,半路杀出了个<a href="http://xjrumo.com/2013/11/05/nikon_df_comming/"> Nikon Df</a>, 这是帅的一塌糊涂啊,尤其银色的骚的无与伦比, 快到嘴的A7要飞了.再结果, 那让人蛋碎的定价&hellip;</p></blockquote>

<p>开篇之前,先扯出我的观点：</p>

<ul>
<li>不管是Leica还是1DX还是NEX,全都能出好的片子.甚至乎,把这几台机子拍的片混淆在一起90%的人分辨不出来</li>
<li>我是玩相机的,不是玩摄影的</li>
<li>很明显的我不是土豪,糕富帅之流.因为这类人可以眼睛不眨的随便玩儿这些机器,各种徕卡哈苏随便当备机</li>
<li>如果你真那么流弊看出来了低端机和高端机的差距, 那是因为人家没后期. 几十块的后期书籍绝对比器材巨大的差价带来的图片差异要明显.</li>
<li>目测6D的一半功能还没玩熟练.</li>
<li>把花在器材的钱节省下来出去玩比器材压箱底封尘抚摸能多出好片.</li>
</ul>


<p>回顾<strong>11年11月11日</strong>,一个很蛋疼的日子,开始陷入相机这趟浑水就折腾的一发不可收拾.
从那会开始的入门级600D+ 18-55 ,没几个月又添置了一枚55-250的中长焦.接着12年中全套出了,貌似这也是第一次出让二手东西. 几千块的说多也不多,说少也还要数上一会,但是很傻b,当时直接就在路边&#8221;洋洋洒洒&#8221;地点数几十张百元大钞,也完全没担心会有假钞啊什么的情况,也老老实实的把一些附件,卡啊包啊什么的送给买的那人.想着留着也用不上╮(╯▽╰)╭ <br/>
说起来,出的原因比较奇葩.记得是因为跟小泡他们去乌镇,然后在东栅的不爽经历.主要是当时人真Y的多爆了.完全是跟随着人流在缓缓挪动前进,加之天气又热,然后我把600D套挂在身上,完全没兴致按快门,还觉得自己特傻逼.</p>

<p><img src="http://farm8.staticflickr.com/7380/8975217373_e8451fb28e_c.jpg" alt="" /></p>

<p>尽管后来西栅还觉得OK,但是东栅那印象太&#8221;深刻&#8221;了
<img src="http://farm4.staticflickr.com/3779/9688265562_987b8dc203_c.jpg" alt="" /></p>

<p>回来第一件事就是卖了 600D 全套.
好吧,其实这不能怪 600D,完全是我一时脑热了.回看第一台拍出的照片, 的确也就跟用高端的DC的样子, 构图乱,曝光不准,后期渣.关于构图, 一直没做到画面简洁这一点,经常贪心地想把什么都收进画面!自然纷乱是必然的了.</p>

<p>后来没过两个月,心里又痒痒的没相机玩,然后刚好心思思索尼的单电A77(其实最开始是想着nex7或Xpro-1的,还是因为钱,靠.大爷的,哪有什么选择困难症,其实就是缺钱),于是又入了一台A77+18-55(没入恒定F2.8那枚只因太屌丝了)</p>

<p><img src="http://farm4.staticflickr.com/3762/8976406402_7833ea9021_c.jpg" alt="" /></p>

<p>要不是遇上毕业季,这台机子肯定是拍的最少的吧,结果却好像是拍的最多的一台.
后来,拍完毕业照什么的,又才入了个50 1.8的大光定.转悠了几天的广州,大概一万快门略多之后7月份又卖了.</p>

<p>至于为什么要卖,其实到现在我也没想明白,可能是想体验下传说中的全幅, 刚好 6D 和 D600 的价格还合适吧.</p>

<p>本来想着耍泥坑的D600的,因为大灯泡据说很犀利,另外想着能玩遍佳能索尼尼康,不过传说的快门掉渣很严重,于是又回到了佳能,拾起6D.
…6D买的是单机,本来配的50 F1.8,后来用没多久,觉得手感太渣出了买了85 F1.8
,然后用途单一了又出了,现在想来其实更喜欢50F1.8那个人类光学精华多一些.出了之后买了24-105 .传说中最渣的红圈,的确有狗定胜牛变得感觉,好吧,24-105也还算不上牛变.<br/>
说实话,传说中的全副也不过如此.有那样的条件aps-c也照样出片.当然,高感确实流弊,6D把ISO开到6400都杠杠的,极端条件开到过万也能使.</p>

<p><img src="http://farm4.staticflickr.com/3722/9797819356_3a14f0cef9_c.jpg" alt="" /></p>

<p>然后没贡献个几千次快门就出了.只因,<strong>骚尼的黑科技</strong></p>

<p>其实期间一直都无敌想耍耍RX1的.还是钱包不堪只能独自YY.随身携带6D对我而言只有理论上的可能,尽管我为了这个目的专门买了NG 5270,也还是不太现实.</p>

<p>A7 / A7R 的出现 ,6D果断就上架了,然后&hellip;</p>

<p><img src="https://gagqnq.dm1.livefilestore.com/y2p5UgWOqXisU1HzlNxJ70nju7Fe1aglu1NNS7sJFWAPTv48Hr0smE8B4J52HDYbCs6VV1-BBGI1Hk_VtmxbjxOGTKKYWoIIkE4vIEZvLMnbzI/QQ20131026-10.png?psid=1" alt="" /></p>

<p><strong>ILCE-7 </strong> 是要到碗里来了吗?</p>

<p><img src="https://uvpbza.dm1.livefilestore.com/y2p6mVCXObMLwtzN-5QNq2_nPWkUnITq96Hp5hLhvD4KWAqrj7Kc7_0WZIZuBl_a4gP0fJAfxvQWVGTS35Nssrg4atuOlh9f04CI0VSokKvj7U/138190742143841518_500.jpg?psid=1" alt="" /></p>

<p>这一做法,牛总直接喷我是傻逼了.<br/>
前几天拿着6D+24-105出去,好些个朋友纷纷说专业,至少看上去专业.问之如何个专业法？答之相机够大,越大越专业.比起看上去专业,我还是拿个小微单好了.虽然比拉风的话被6D套甩开N条街,看上去也业余,so what,本来就是业余撒!不过我这是要换了A7,牛总估计也都不好意思让我这个业余再去给他客串摄影师了.但话说回来,以这玩机心态,说不定哪天会抬一台a99回来的叻! 一直都有双机的计划.</p>

<p>总的说来,这其中进进出出的倒腾必然带给我差价的亏损,朋友很多一听我说又要卖器材就说比我原价买的时候亏了多少多少,但是比起学到一些照相知识,比起得到一些照片,比起满足了玩相机的乐趣,那些损失真心算不上什么,反倒是觉得我赚了.把机器珍藏在家里不用,等到掉价了那才叫损失吧.(这算不算吖Q呢？)</p>

<p>帮亲朋好友拍过婚礼,自己出玩行行摄摄,从 Flickr 可以看出,除去那会600D的一部分照片遗失了之外,从头到尾大概两万次快门多些,带给我的,留下来的只有不到3000张照片.其中绝大部分都是以记录为名,能称的上好片的为数不多,稍微好一点的放到了500px, 也就那么不到百张.不过拍照不大都是要记录吗？只不过因为业余兴趣所以用上了比手机要好的机器罢了.</p>

<p>再骂自己一句,啥时候我也变成数毛党, 百分百党了, Y的看到各种样片还各种 download 之后放大到百分百.我烧坏了定.</p>

<h2>UPDATE</h2>

<p><img src="https://gagqnq.dm1.livefilestore.com/y2pKEQcF2xogDKyFBBScbjZrTI_RJWPlLuvS4lBEIKZNZdAfNhHZKIWaSQdFKGAq-OffIL1pBHYk2StNID2V3g6YGytrxUHvbmRJ2sPFQ3KiYk/QQ20131105-2.png?psid=1" alt="" /></p>

<p>帅到掉渣的Df 一出, 我被迷的一塌糊涂了. (千万别真的跟 D600 那样掉渣就好).</p>

<p>可是帅到没朋友啊, 单机官方价16000+, 比A7贵出一截, 我这是要卖身的节奏啊!!!!!!!(A7 的性价比巨高, 减去各种附送的, 套机才10000略多点) ,但是真的喜欢那个造型.</p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2plQmxbpN-LRF6pyVxBR2AcyJuiV0oJvru_vMrizIIwbr0Qq8yujianm9xVSLQyCLHAfV_pQ8JmrhjloSuNuI-qG0bTTYGc7pOWlj6yYUpi4M/QQ20131105-1.png?psid=1" alt="" /></p>

<p>单看参数, 数码科技等各方可能被 A7  完爆(出片未必) <br/>
什么不能拍视频, 1/4000 快门, 对我来说都是浮云!( wifi 可能有点吸引)    <br/>
但是 Df 这个造型秒了 A7 九条街啊(A7 样子其实也不错)</p>

<p>PS 有人说这是定位给喜欢胶片的人. 然则, 表示完全不喜欢胶片, 我是反胶片党, 更恶心提什么胶片感的.</p>

<h2>再UPDATE</h2>

<p>虽然喜欢 Nikon 的 Df, 但无奈钱包不足够宽松,本来我已经做好吃螃蟹的准备,但是国内奸商报价24400, 虽然知道很快会降下来,但是这很快也得等上一阵子&hellip; 想过走海淘的, 日亚上卖 250000JPY,折合CNY才15500左右. 顶多就是以后用英文菜单把逼格再拉高一档罢了. 但是, 走海淘由于某些原因,还是要等, 于是, 折腾了一圈,回来选了<strong>A7R</strong>, 被 金属做工(据说也看不大出)+去低通36mp 吸引了.好吧,反正我就是那么容易被相机吸引的.</p>

<p>Df 等以后降到合理价了买来玩双机好了.</p>

<p>不过这个 A7R也纠结了好一会, 官方居然不给订狗头套, 加个35 F2.8的头要18000+ , 艾玛, 这又赶上 Df那个价了! 蛋疼!<br/>
后来有发现7R 搭狗头的, 于是就这么个奇葩玩法了.希望不会浪费那块 36MP 据说流弊到爆的 CMOS</p>

<p>========</p>

<p>600D 用了不到一年, A77 用了大概9个月, 6D,  不到三个月,  A7 略惨烈,死在订单中,Df 更惨烈, 胎死腹中!  <br/>
不折腾会死玩相机星人,往后还是不折腾机身镜头了,把附件搞上去再多出去玩儿才是王道 ╮(╯▽╰)╭  有了闪灯或是脚架会比倒腾这些机身镜头来的更有意义,不过那也是不小的开销(没人逼你买7个顶级灯来召唤神龙的!!!)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 添加 Audio]]></title>
    <link href="http://xguox.github.com/blog/2013/11/10/octopress-audio/"/>
    <updated>2013-11-10T16:07:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/10/octopress-audio</id>
    <content type="html"><![CDATA[<p>又是忽然的,想贴音乐在 Octopress ,但是发现貌似自带的插件只有 video_tag 贴视频. 搜索了一下发现一个合适的. 直接贴 Gist 了(尴尬,才发现 Gist 的样式貌似跟主题冲突了,又一个 TODO ):</p>

<div><script src='https://gist.github.com/3487038.js?file=audio_tag.rb'></script>
<noscript><pre><code># Title:
#       Octopress HTML5 Audio Tag
#       http://antoncherkasov.me/projects/octopress-plugins
# Author:
#       Anton Cherkasov
#       http://antoncherkasov.me
#       antoncherkasov@me.com
# Syntax:
#       {% audio url/to/mp3 %}
#       {% audio url/to/mp3 url/to/ogg %}
# Example:
#       {% audio http://example.org/music.mp3 http://example.org/music.ogg %}
# Output:
#       &lt;audio controls&gt;&lt;source src=&quot;http://example.org/music.mp3&quot;&gt;&lt;source src=&quot;http://example.org/music.org&quot;&gt;&lt;/audio&gt;

module Jekyll
    class AudioTag &lt; Liquid::Tag
        @audio = nil

        def initialize(tag_name, markup, tokens)
            @files = markup
            super
        end

        def render(context)
            output = super
            audio = &quot;&lt;audio controls&gt;&quot;
            @files.each_line(' ') do |file|
                audio += &quot;&lt;source src='#{file[0...-1]}'&gt;&quot;
            end
            audio += &quot;&lt;/audio&gt;&quot;
        end
    end
end

Liquid::Template.register_tag('audio', Jekyll::AudioTag)</code></pre></noscript></div>


<p>语法跟原本的 <code>video_tag</code> 差不多,</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    {% audio url/to/mp3 %}
</span><span class='line'>    {% audio url/to/mp3  url/to/ogg %}</span></code></pre></td></tr></table></div></figure>


<p><audio controls><source src='http://m1.file.xiami.com/259/58259/71695147/1771959699_10559682_l.mp3'></audio></p>

<p>有了插件支持,还得有 mp3 的 url, 听歌真心不多, 偶尔用的多的是虾米, 但却没处找上边的音乐的真实地址, 后得大神提醒, 在浏览器的 Inspector 可以查找到, 以 Chrome 为例, 在 Dev Tool 的 &lsquo;Network&rsquo; 可以轻易找到相应音乐的链接.<br/>
还有更流弊的做法参考 <a href="http://www.cnblogs.com/bobzhou/archive/2013/02/16/bobzhou.html">http://www.cnblogs.com/bobzhou/archive/2013/02/16/bobzhou.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一本书和一个杯子]]></title>
    <link href="http://xguox.github.com/blog/2013/11/09/a-sudden-consciousness/"/>
    <updated>2013-11-09T23:17:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/09/a-sudden-consciousness</id>
    <content type="html"><![CDATA[<p><audio controls><source src='http://m1.file.xiami.com/259/58259/515557/1771031189_3321387_l.mp3'></audio></p>

<h1>Test audio_tag</h1>

<p>忽然发现, 曾经买过一本Rails书, AWDWR.
然后,落了在上海.<br/>
第四版的,这一版本的中译本封面真心难看,跟英文原书完全不同了.</p>

<p>其次还落了的是一个杯子.<br/>
<img src="https://gagqnq.dm2301.livefilestore.com/y2pjyqqxX98DCYtkwLQsHtjPL7ciJvZF6OCJEAZnvRbwbaqbJEPq2rUH7U-Z01ayjUTZZce_F2BUz32TOcnOenBCZWp7wCo4CnQxxm7GCHh-z8/T2Kd9EXiRaXXXXXXXX_!!112015850.jpg_310x310.jpg?psid=1" alt="" /></p>

<p> 当时选择买这个杯子的原因是因为上面的20, 刚好那时20岁. 这没一会. 我就即将22岁了. 还记得这个杯子比一般的要高出个七八厘米,目测也是20cm左右, 也特厚特重. 但是用久了,习惯了以后就没感觉了. 等到我回来家里. 刚开始的那些天拿起家里的杯子各种轻, 那种感觉特别明显. 但是, 时间过去, 我也又熟悉了家里的这个这么轻的杯子,忘记了那个20的重量.</p>

<p> 也不知道还有啥落了,估计有也不是什么重要东西, 滚回来一年了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重拾Ruby (III)]]></title>
    <link href="http://xguox.github.com/blog/2013/11/07/relearn-ruby-iii/"/>
    <updated>2013-11-07T23:56:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/07/relearn-ruby-iii</id>
    <content type="html"><![CDATA[<p>不把这些当做笔记卸写下来总隐隐约约觉得自己没掌握, 所以还是继续做笔记.</p>

<h2>Proc</h2>

<p>lambda 在1.9之后的写法(之前的也可以用)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lamb</span> <span class="o">=</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>proc 对象 和 block 对象之间的转换.</p>

<h4>调用方法的时候参数前加 &amp;</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweets</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">printer</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># 把 proc 对象 转换成 block 对象 each 后面的是 block ,不是传参数</span>
</span></code></pre></td></tr></table></div></figure>


<h4>定义方法的时候参数前加 &amp;</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># 把 block 对象 转换成 proc 对象, 把 block 转换成 proc 才能作为参数</span>
</span></code></pre></td></tr></table></div></figure>


<p>PS. method 对象转换成 block 对象</p>

<h4>symbol</h4>

<p><code>tweets.map { |tweet| tweet.user }</code></p>

<p>Same as</p>

<p><code>tweets.map(&amp;:user)</code></p>

<h4>block_given?</h4>

<h4>closure</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tweet_as</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">tweet</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">tweet</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>当 lambda 被创建后局部变量(在这即user) 被保存起来</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gregg_tweet</span> <span class="o">=</span> <span class="n">tweet_as</span><span class="p">(</span><span class="s2">&quot;greggpollack&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># 相当于创建了   lambda { |tweet| puts &quot;greggpollack: #{tweet}&quot; }</span>
</span><span class='line'>
</span><span class='line'><span class="n">gregg_tweet</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;Test!&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># greggpollack: Test!</span>
</span></code></pre></td></tr></table></div></figure>


<h2>self</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Outside the class : </span><span class="si">#{</span><span class="nb">self</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># Outside the class : main</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Inside the class : </span><span class="si">#{</span><span class="no">Tweet</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># Inside the class : Tweet</span>
</span></code></pre></td></tr></table></div></figure>


<h3>class_eval sets <code>self</code> to the given class and executes the block</h3>

<h3>instance_eval sets <code>self</code> to the given instance and executes the block</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重拾Ruby (II)]]></title>
    <link href="http://xguox.github.com/blog/2013/11/05/relearn-ruby-2/"/>
    <updated>2013-11-05T16:30:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/05/relearn-ruby-2</id>
    <content type="html"><![CDATA[<p>继续复习 + 笔记, 今天要写的是 Dynamic Classes &amp; Methods</p>

<h2>Struct</h2>

<p>一般的, 定义一个类的做法如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Game</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:year</span><span class="p">,</span> <span class="ss">:system</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">year</span><span class="p">,</span> <span class="nb">system</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">year</span> <span class="o">=</span> <span class="n">year</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">system</span> <span class="o">=</span> <span class="nb">system</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>而鉴于以上这个例子的数据结构比较简单, 所以其实我们可以使用Struct来写之:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Game</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">:year</span><span class="p">,</span> <span class="ss">:system</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果需要添加实例方法则可以这么干:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Game</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="ss">:year</span><span class="p">,</span> <span class="ss">:system</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="n">year</span><span class="si">}</span><span class="s2">,</span><span class="si">#{</span><span class="nb">system</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果需要定义的 data 比 behavior 要多的话, 推荐使用 Struct 来创建类, 反之则使用传统的方法.</p>

<h2>alias_method</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tweets</span><span class="o">=[]</span><span class="p">)</span>
</span><span class='line'>   <span class="vi">@tweets</span> <span class="o">=</span> <span class="n">tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tweets</span>
</span><span class='line'>    <span class="vi">@tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">contents</span>
</span><span class='line'>    <span class="vi">@tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>由于 tweets 和 contents 两个方法体其实是一样的只是方法名不同, 为免重复我们可以这么干</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tweets</span><span class="o">=[]</span><span class="p">)</span>
</span><span class='line'>   <span class="vi">@tweets</span> <span class="o">=</span> <span class="n">tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">tweets</span>
</span><span class='line'>    <span class="vi">@tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">#实际上其实这是getter方法,所以其实这里可以这么写</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">#attr_reader :tweets</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:contents</span><span class="p">,</span> <span class="ss">:tweets</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>更多例子, 假设如下在 Timeline 类</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span><span class="p">:</span> <span class="ss">:tweets</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">tweets</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;\n&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>我们需要给 print 方法添加 authentication .如果由于某些原因我们不想改动现有的方法的话, 可以重新打开<code>Timeline</code> 这个类,然后使用 <code>alias_method</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:old_print</span><span class="p">,</span> <span class="ss">:print</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print</span>
</span><span class='line'>    <span class="n">authenticate!</span>
</span><span class='line'>    <span class="n">old_print</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#实际上就是旧有的 print 方法改名为 old_print, 而重写了 print 给它加上了 authenticate! </span>
</span><span class='line'>  <span class="c1">#然后调用旧有方法 old_print</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">authenticate!</span>
</span><span class='line'>    <span class="c1"># do sth authentication</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是,需要注意的是,重新打开一个类是个危险的做法. 所以, 另一种做法是使用继承.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AuthenticatedTimeline</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print</span>
</span><span class='line'>    <span class="n">authenticate!</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">authenticate!</span>
</span><span class='line'>    <span class="c1"># do sth authentication</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>好吧, 尴尬了,貌似 alias_method 没看到什么更实际的意义了 =.=</p>

<h2>define_method</h2>

<p>下边例子, 可以看到比较多的重复代码,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">draft</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:draft</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">posted</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:posted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">deleted</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="p">:</span> <span class="n">deleted</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用 define_method 可以杠杠的减少这些重复. 并且,当需要添加新的 state 时候只需添加到 states 数组中即可.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="n">states</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:draft</span><span class="p">,</span> <span class="ss">:posted</span><span class="p">,</span> <span class="ss">:deleted</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">states</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">status</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_method</span> <span class="n">status</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@status</span> <span class="o">=</span> <span class="n">status</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>send</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tweets</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="n">tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">contents</span>
</span><span class='line'>    <span class="vi">@tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">direct_messages</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">tweets</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;Compiling!&#39;</span><span class="p">,</span> <span class="s1">&#39;Bundling...&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">timeline</span> <span class="o">=</span> <span class="no">Timeline</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">tweets</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>timeline.contents</code>
一般的, 我们是这么调用 contents 方法.</p>

<p>除此外,我们还可以使用 send</p>

<p><code>timeline.send(:contents)</code></p>

<p>等同于</p>

<p><code>timeline.send("contents")</code></p>

<p>另外,我们还可以用 send 来调用 private  或者 protected
<code>timeline.direct_message</code></p>

<p>如果不希望调用 private 和 protected 的方法则可以用 <code>public_send</code></p>

<p>尴尬,更具体用途有待挖掘.</p>

<h2>method 方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tweets</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@tweets</span> <span class="o">=</span> <span class="n">tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">contents</span>
</span><span class='line'>    <span class="vi">@tweets</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show_tweet</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="vi">@tweets</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">tweets</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;Compling!&#39;</span><span class="p">,</span> <span class="s1">&#39;Bundling...&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">timeline</span> <span class="o">=</span> <span class="no">Timeline</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">tweets</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">content_method</span> <span class="o">=</span> <span class="n">timeline</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:contents</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># =&gt; #&lt;Method: Timeline#contents&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">content_method</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'> <span class="c1"># =&gt; [&#39;Compling!&#39;, &#39;Bundling...&#39;]</span>
</span><span class='line'>
</span><span class='line'><span class="n">show_method</span> <span class="o">=</span> <span class="n">timeline</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:show_tweet</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># =&gt; #&lt;Method: Timeline#show_tweet&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># =&gt; Compiling!</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">show_method</span><span class="p">)</span>
</span><span class='line'> <span class="c1"># =&gt;</span>
</span><span class='line'> <span class="c1"># Compiling!</span>
</span><span class='line'> <span class="c1"># Bundling...</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># 通过 &amp; 把 method 对象转换成 block</span>
</span><span class='line'> <span class="c1"># same as</span>
</span><span class='line'> <span class="c1"># show_method.call(0)</span>
</span><span class='line'> <span class="c1"># show_method.call(1)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>在 Ruby 中, 任何东西都是 object, 任意的一个方法同样,也是一个 object</p>

<h1>Practice</h1>

<p>重构</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Library</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:games</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">games</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">map</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">games</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">select</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">games</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>好吧,没掌握熟练,各种转晕了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重拾Ruby (I)]]></title>
    <link href="http://xguox.github.com/blog/2013/11/04/relearn-ruby/"/>
    <updated>2013-11-04T14:47:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/11/04/relearn-ruby</id>
    <content type="html"><![CDATA[<p>真心尴尬,学习并使用了一年多的 Ruby/Rails,然后些个月不碰就忘了大半了.原本就不高端,这一回滚跟重头再来差不多了. 语法还能快速过了一遍.(主要通过 <a href="https://www.codeschool.com/">CodeSchool</a>) 元编程,DSL那一块接下来可要费点劲了,毕竟原先也没完全掌握到.</p>

<p>今天学到两个之前没注意的 tricks.</p>

<p>一个是关于<code>to_s</code>的,另外个是关于 <code>Module</code> .</p>

<h2>to_s</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Game</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:year</span><span class="p">,</span> <span class="ss">:system</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:created_at</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">year</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:year</span><span class="o">]</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">system</span> <span class="o">=</span> <span class="n">options</span><span class="o">[</span><span class="ss">:system</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@created_at</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">description</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">self</span><span class="si">}</span><span class="s2"> was released in </span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">year</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ConsoleGame</span> <span class="o">&lt;</span> <span class="no">Game</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> - </span><span class="si">#{</span><span class="nb">self</span><span class="o">.</span><span class="n">system</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中的字符串插值<code>#{self}</code>其实相当于隐式调用了<code>to_s</code>,在这里也就是<code>self.to_s</code> 好吧, 我傻逼了,字符串插值当然是不管啥都执行<code>to_s</code>. 不过我想说的不是这个.而是牵扯到<code>puts</code>和<code>p</code></p>

<h3>puts and p and inspect</h3>

<p>调用一些例子:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="n">number</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@string</span> <span class="o">=</span> <span class="n">string</span>
</span><span class='line'>    <span class="vi">@number</span> <span class="o">=</span> <span class="n">number</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;In to_s:</span><span class="se">\n</span><span class="s2">   </span><span class="si">#{</span><span class="vi">@string</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="vi">@number</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_a</span>
</span><span class='line'>    <span class="s2">&quot;In to_a:</span><span class="se">\n</span><span class="s2">   </span><span class="si">#{</span><span class="vi">@string</span><span class="si">}</span><span class="s2">, </span><span class="si">#{</span><span class="vi">@number</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hello world&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">In</span> <span class="nb">to_s</span><span class="p">:</span>
</span><span class='line'>   <span class="n">hello</span> <span class="n">world</span><span class="p">,</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里的<code>to_s</code>在对象被实例化之后隐式调用了</p>

<p>然后是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Item</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">inspect</span>
</span><span class='line'>    <span class="s2">&quot;Result of inspect&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="nb">p</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;Item:0x8f85568&gt;</span>
</span><span class='line'><span class="c1">#&lt;Item:0x8f8552c&gt;</span>
</span><span class='line'><span class="no">Result</span> <span class="n">of</span> <span class="nb">inspect</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>puts</code>通常输出的是 对象调用<code>to_s</code>的结果,而<code>p</code>则是直接输出<code>inspect</code></p>

<h3>inspect vs to_s</h3>

<p>另一个例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Item</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">item_name</span><span class="p">,</span> <span class="n">qty</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@item_name</span> <span class="o">=</span> <span class="n">item_name</span>
</span><span class='line'>    <span class="vi">@qty</span> <span class="o">=</span> <span class="n">qty</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">item</span> <span class="o">=</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">item</span>
</span><span class='line'><span class="nb">p</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#&lt;Item:0x8f85388&gt;</span>
</span><span class='line'><span class="c1">#&lt;Item:0x8f85388 @item_name=&quot;a&quot;, @qty=1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到, <code>puts</code>打印出类名然后跟着一个十六进制的数,这个数字跟该对象在内存中的存储位置相关,不过我们很少会使用到.</p>

<p>而<code>p</code>的话是打印出类名及该对象的所有的实例变量,这个在debug的时候非常有用.</p>

<p>上面这个例子说明了<code>p</code>和<code>puts</code>的不同,但是,有时候你会想要自定义这些方法的输出形式. 这个可以通过重写<code>to_s</code>来完成.</p>

<p>如下面的例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Item</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">item_name</span><span class="p">,</span> <span class="n">qty</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@item_name</span> <span class="o">=</span> <span class="n">item_name</span>
</span><span class='line'>    <span class="vi">@qty</span> <span class="o">=</span> <span class="n">qty</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@item_name</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="vi">@qty</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">item</span> <span class="o">=</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">item</span>
</span><span class='line'><span class="nb">p</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">a</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">a</span><span class="p">:</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>此时,<code>p</code>和<code>puts</code>是相同的,因为<code>to_s</code>被重写,Ruby会把它当作默认的<code>inspect</code>结果.除非你重写<code>inspect</code>方法. 如前边的例子</p>

<p>参考<a href="http://Rubymonk.com/learning/books/4-Ruby-primer-ascent/chapters/45-more-classes/lessons/108-displaying-objects">RubyMonk</a></p>

<p><a href="http://stackoverflow.com/questions/12040527/Ruby-automatically-calls-to-s-method-when-object-is-created/19751192#19751192">http://stackoverflow.com/questions/12040527/Ruby-automatically-calls-to-s-method-when-object-is-created/19751192#19751192</a></p>

<h2>Module</h2>

<p>一般的,把 module 的方法添加到类中有两种方式(用途也不同).</p>

<p>一种是使用 include 添加后作为实例方法; 另一种是使用 extend ,对应的是作为类方法使.</p>

<p>当然,这是比较多用到的, 再还有一种则是扩展单个对象.<br/>
直接 copy 官方文档的例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Mod</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>    <span class="s2">&quot;Hello from Mod.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>    <span class="s2">&quot;Hello from Klass.</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="no">Klass</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">hello</span>         <span class="c1">#=&gt; &quot;Hello from Klass.\n&quot;</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">Mod</span><span class="p">)</span>   <span class="c1">#=&gt; #&lt;Klass:0x401b3bc8&gt;</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">hello</span>         <span class="c1">#=&gt; &quot;Hello from Mod.\n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>当需要作为类方法和实例方法添加到类当中的时候, 当然, 可以同时使用<code>include</code>和<code>extend</code>, 不过还有另一种简便一些的方法 <strong>Hooks &ndash; self.included</strong></p>

<p>比如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">LibraryUtils</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">ClassMethods</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">add_game</span><span class="p">(</span><span class="n">game</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_game</span><span class="p">(</span><span class="n">game</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">search_by_game_name</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">AtariLibrary</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">LibraryUtils</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 当前 module 被 base 包含</span>
</span><span class='line'><span class="c1"># module名 ClassMethods 可以任意取</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后, 还有可以通过调用<code>ActiveSupport::Concern</code>.参考 <a href="http://api.RubyonRails.org/">Rails</a> 文档<br/>
典型的 module 是:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="no">ClassMethods</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用 <code>ActiveSupport::Concern</code> 上边的例子可以这么改写:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/concern&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>此外, 它可以优雅地处理 module 之间的依赖. 如下例子,假定 module <code>Bar</code> 依赖于 module <code>Foo</code>. 通常的我们会这么写</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">method_injected_by_foo</span>
</span><span class='line'>        <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Bar</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">method_injected_by_foo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Host</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span> <span class="c1"># We need to include this dependency for Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Bar</span> <span class="c1"># Bar is the module that Host really needs</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是,<code>Host</code>为嘛要关心<code>Bar</code> 的依赖 <code>Foo</code>呢?为啥不直接在<code>Bar</code>里头引入<code>Foo</code>呢?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">method_injected_by_foo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Host</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Bar</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>不幸的是,这不起作用. 因为当<code>Foo</code>在<code>Bar</code>中included 的时候,<code>Foo</code> 中的<code>base</code>实际上是<code>Bar</code> module,而不是 <code>Host</code>类.这时候用<code>ActiveSupport::Concern</code>的话就可以杠杠地解决这个依赖问题.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/concern&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">method_injected_by_foo</span>
</span><span class='line'>      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Bar</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:Concern</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">method_injected_by_foo</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Host</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Bar</span> <span class="c1"># works, Bar takes care now of its dependencies</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后,附上<code>included</code>源码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># File activesupport/lib/active_support/concern.rb, line 118</span>
</span><span class='line'><span class="k">def</span> <span class="nf">included</span><span class="p">(</span><span class="n">base</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">base</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="vi">@_included_block</span> <span class="o">=</span> <span class="n">block</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hidden Productivity Secrets With Alfred]]></title>
    <link href="http://xguox.github.com/blog/2013/10/28/hidden-productivity-secrets-with-alfred/"/>
    <updated>2013-10-28T15:07:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/28/hidden-productivity-secrets-with-alfred</id>
    <content type="html"><![CDATA[<p>好的开发人员总是在寻找可以让自己的工作流程更快速,更自动化的方法.<br/>
这次,我们带来的是<strong>Alfred的一系列workflows</strong>,它们可以极大的提高你的开发效率,相信你会为之震惊.</p>

<h3>What is Alfred?</h3>

<p>对于大多数了解不深的人来说,<a href="http://www.alfredapp.com/">Alfred</a>只是一个备受赞誉的Mac OS X app, 它可以快速地帮助你查找在线或者本地的文件. 最新的版本 <strong>Alfred 2</strong>更是带来了大量的改进,尤其是其中的<a href="http://www.alfredapp.com/powerpack/">Powerpack</a>,可以让你创建自己的workflows(工作流程).</p>

<p>下面你将会看到这些精心挑选出来的,能够改变你的工作方式的workflows.</p>

<h2>Open With Sublime Text</h2>

<p>强大的文件,目录搜索能力是Alfred所最让人喜爱的功能之一. 那如果我们想要利用它使用自己喜爱的编辑器(比如说Sublime Text 3)打开文件或者目录呢?</p>

<ul>
<li><a href="https://github.com/franzheidl/alfred-workflows/tree/master/open-with-sublime-text">Open With Sublime Text (v3)</a>, developed by <a href="https://github.com/franzheidl/">@franzheidl</a></li>
<li><a href="http://zno.io/RcAe">下载</a></li>
<li>触发: <code>subl</code>,<code>subl*</code></li>
</ul>


<p>想要其他编辑器的话请猛击 <a href="https://github.com/zenorocha/alfred-workflows/wiki/Extras#code-editors">Extras</a></p>

<p><img src="https://7nnqba.dm1.livefilestore.com/y2pGNECa5OJFUT2KVW5fKdahDKuCsRFn-r7el4QbFLC7ijAiYxRNxBI_COOWUq8W8-oKBvrS0eU7UyCFn129AtLp9eBjydEPpJzJwHMK8hIqMA/alfred-subl-opt.png?psid=1" alt="" /></p>

<p>XguoX: 可能更多人还是选择在终端直接用命令敲开.</p>

<h2>Can I Use&hellip; Workflow</h2>

<p>在HTML5时代,当使用某一个CSS属性或者JavaScript APIs之前,你需要检查知道浏览器是否支持. 当然,你可以打开浏览器,直接浏览<a href="http://caniuse.com/">Can I Use&hellip;</a>这个网站, 然后搜索某个关键字从而看看浏览器的支持情况.除此外,你还可以使用这个Alfred Workflow.</p>

<ul>
<li><a href="https://github.com/willfarrell/alfred-caniuse-workflow">Can I Use&hellip; Workflow</a>,developed by <a href="https://github.com/willfarrell/">@willfarrell</a></li>
<li><a href="http://zno.io/Rcex">下载</a></li>
<li>触发: <code>caniuse</code></li>
</ul>


<p><img src="https://7nnqba.dm2301.livefilestore.com/y2pLGL9Yh8RK9E6UUkjLPqhxSoA_Wofc3tyJuq-9DOmdK1fjtDTfmvBdegAJmCsO45T_Pf02opsLZ2YJXmhoXWy5HXUTmCw-3u-oJfUH9UERVU/alfred-caniuse-opt.png?psid=1" alt="" /></p>

<p>XguoX:搜索速度还行</p>

<h2>Dash Workflow</h2>

<p>没有人会知道某一门语言或者某一个框架的所有.我们时常会需要查找某个特定的method如何使用.最近,发现了一个非常惊艳的app,<a href="http://kapeli.com/dash">Dash</a>,在本地查找各类APIs文档,完全离线的说. 这还不算啥,通过这个workflow,你可以通过过滤各个语言(框架)关键字来查找相关文档.这个流弊的app可是免费的哦,所以,在使用这个workflow前请先安装好Dash.</p>

<ul>
<li><a href="https://github.com/willfarrell/alfred-dash-workflow">Dash Workflow</a>,developed by <a href="https://github.com/willfarrell/">@willfarrell</a></li>
<li><a href="http://zno.io/Rc3p">下载</a></li>
<li>触发:<code>dash</code> <code>html</code> <code>css</code> <code>gem</code> <code>angularjs</code> <code>Rails</code> 基本上常用的语言框架库都有了</li>
</ul>


<p><img src="https://7nnqba.dm1.livefilestore.com/y2p8jXte6unkiz4tr4VJFW9zTtwY5LHw6TPj8Bhx6IOm_bI2eU-6GyzBMx8DdEbI6jsLcPz7ttB9S1FqNDA9q8rU4JsouoEspKKgbjj2k-EQLA/alfred-dash-bs-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm2302.livefilestore.com/y2pxzqD2DRpB4rhywnWViFn5zJMrjn59dI_lKaX4wCj9HTSO40hX1NSuRoCJGObJMCHdRB-bkmuYE9OPQePbPjXcaVli3J3dETsLtKIPWx-aHU/alfred-dash-js-opt.png?psid=1" alt="" /></p>

<p>XguoX:Dash 真心很流弊!巨赞!!!</p>

<h2>Terminal Finder</h2>

<p>一些操作我们可能会希望在终端完成,而另一些则希望在Finder完成.这个workflow可以流畅地在这两者之间转换.在终端(iTerm)中打开当前的Finder窗口,反之亦然.</p>

<ul>
<li><a href="https://github.com/LeEnno/alfred-terminalfinder">TerminalFinder</a>, developed by <a href="https://github.com/LeEnno/">@LeEnno</a></li>
<li><a href="http://zno.io/RkU2">下载</a></li>
<li>触发: <code>ft</code> <code>tf</code> <code>fi</code> <code>if</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2plpdCbBvSP7J7seYaCrTIdd0MPtXmqhhqDa-GPRjiO3nBza38J4jpFTetxVTAWfkafkiiTrqaikp-v3_Q-n2bTiBZj7rc3RvdO8OXgjJIhZU/alfred-fi-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm1.livefilestore.com/y2pKTdNdqK9KacL8BTdEMxozuH9vtTAC0qZTdO7wMa3VFtS0rjV_EXpOMKyYx_eqMAGvs6auzVGPw50UN-qYMJyeUVwZNihpyq8TbyYeyqUFyw/alfred-tf-opt.png?psid=1" alt="" /></p>

<p>XguoX:又是一个巨实用的workflow</p>

<h2>Package Managers Workflow</h2>

<p>代码复用是软件开发的一个重要组成部分,现如今我们有很多的方案来构建我们的代码以及搜索使用第三方软件包. 想要使用某个Node.js module? Grunt task?通过这个workflow,你可以快速简便地在一个地方通过你想要的包管理器查找到你想要的插件或者组件.</p>

<ul>
<li><a href="https://github.com/willfarrell/alfred-pkgman-workflow">Package Managers Workflow</a>, developed by <a href="https://github.com/willfarrell/">@willfarrell</a></li>
<li><a href="https://github.com/willfarrell/">下载</a></li>
<li>触发: <code>bower</code> <code>grunt</code> <code>npm</code> <code>composer</code> <code>gems</code> <code>pear</code> <code>pypi</code> <code>cocoa</code> <code>brew</code> <code>alcatraz</code> <code>rpm</code> <code>maven</code> <code>docker</code></li>
</ul>


<p><img src="https://7nnqba.dm1.livefilestore.com/y2ppAHAT45dOTn6bKbLSb4zC8iyK4bl8qlXjz7dsYx3h3lceulR1kHbZdz1wS5XiA5V6pzdJGxrpjKI-gwF6IpD1YNBNZCfYrQjp8YCi1R5fC8/alfred-pkg-npm-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm2302.livefilestore.com/y2pWCd9J95EnTh62aMYZ9zHDatkpfUg4qKScGsMpA-Fhy4FBtFBsJ8PkT-flubEWPpzY36rvmSRkv874m_pllj_80s9B0GaEu5XxWonxf6V02o/alfred-pkg-bower-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm1.livefilestore.com/y2pQTFJVwQuk4cV5yWHSoFYQCOanTC6JCB5UnfAqtUNouF6M38QLKC-k1d97hzFQi5HOGcI44owdzMcMJJUvmhJS-eLWBgwQjKEe4FDjwh6TWo/alfred-pkg-grunt-opt.png?psid=1" alt="" /></p>

<h2>Colors</h2>

<p>不用再每次想要转换某个颜色格式的时候打开Photoshop了.通过这个workflow可以很轻易在HEX, RGB, HSL这些个颜色格式之间转换.</p>

<ul>
<li><a href="https://github.com/TylerEich/Alfred-Extras/tree/master/Source/Colors">Colors</a>, developed by <a href="https://github.com/TylerEich/">@TylerEich</a></li>
<li><a href="http://zno.io/RcFz">下载</a></li>
<li>触发: <code>#</code> <code>rgb</code> <code>hsl</code> <code>c</code></li>
</ul>


<p><img src="https://7nnqba.dm2301.livefilestore.com/y2p57G91c-OHhp8vWr5mZDL3mvkawhRy64cCzIWzNEBlqL_EVbapnnvDeZUcVdCVtDJ4ow6hfm0cE1yB5AUViUp2A81StX_YpA7T_5mR_B7Rqk/alfred-colors-opt.png?psid=1" alt="" /></p>

<h2>Jenkins Workflow</h2>

<p>做单元测试固然是好,但是每更改一行代码就手动跑一次测试的话会让人抓狂的. 为了得到更好的代码质量,我们需要跑跟更多的测试,或者至少的自动运行那些我们已经在跑的测试. 这就是为嘛<strong>持续集成系统</strong>那么重要.通过这个workflow,你可以列出<a href="http://jenkins-ci.org/">Jenkins</a>的所有工作以及它们的状态.</p>

<ul>
<li><a href="https://github.com/jeroenseegers/alfred-jenkins-workflow">Jenkins Workflow for Alfred v2</a>, developed by <a href="https://github.com/jeroenseegers/">@jeroenseegers</a></li>
<li><a href="https://github.com/jeroenseegers/alfred-jenkins-workflow/raw/master/Jenkins.alfredworkflow">下载</a></li>
<li>触发: <code>jenkins status</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2p1OLZbpkCxnoR1-ucaW61I99PIVPvOO_136IItknkfT8GvIGdr9lMaF8P78koNZB9q4_Wxld8CzdfdYegwtcTkOMkdbAtb1A3kPK-8WOlsHw/alfred-jenkins-opt.png?psid=1" alt="" /></p>

<p>XguoX:好吧,这玩意没接触过</p>

<h2>Open in FileZilla</h2>

<p>目前来说传输文件到Web服务器的最流行方式还是使用FTP. 而这个workflow可以帮助你快速地通过<a href="https://filezilla-project.org/">FileZilla</a>连接到远程服务器端. FileZilla也是一个免费的应用,所以,在用这个workflow之前请记得先安装之.</p>

<ul>
<li><a href="https://github.com/jeffmagill/alfred-open-in-filezilla">Open in FileZilla</a>, developed by <a href="https://github.com/jeffmagill/">@jeffmagill</a></li>
<li><a href="http://zno.io/RnTx">下载</a></li>
<li>触发: <code>fz</code></li>
</ul>


<p>在用其他FTP客户端吗?请猛击 <a href="https://github.com/zenorocha/alfred-workflows/wiki/Extras#ftp">Extras</a></p>

<p><img src="https://7nnqba.dm1.livefilestore.com/y2pb9b3kwcHV5UkchYzjh4f-Jw_YMi0uHVYkNeM_0A4g4859bfjcc49jLLQcyTpsOu2f-hOlh2D7sDSGAt65humZvmCuy3QFlH9tJHMAhlgLp4/alfred-fz-opt.png?psid=1" alt="" /></p>

<h2>Domainr Workflow</h2>

<p>不想错过一些帅气的域名的话,可以通过<a href="https://domai.nr/">Domainr</a> APIs快速查找.</p>

<ul>
<li><a href="https://github.com/dingyi/Alfred-Workflows/tree/master/Domainr">Domainr Workflow</a>, developed by <a href="https://github.com/dingyi/">@dingyi</a></li>
<li><a href="http://zno.io/RctP">下载</a></li>
<li>触发: <code>domainr</code></li>
</ul>


<p><img src="https://7nnqba.dm2301.livefilestore.com/y2pQl13GHOojZONNNtZnsAeO2IKT6fe1AMAt0uR-SSL5MJQgw-wJ66ZqFNHXS4t7S5X4Osl31-d0jAJ65uishVIPvmNU7L09CfJ19v_Gxi1f7A/alfred-domain-opt.png?psid=1" alt="" /></p>

<h2>Encode / Decode</h2>

<p>有时候, 我们需要把一些UTF-8字符转换成HTML编码,或是解码某个URL. 使用 Encode / Decode , 这些杂碎的事情将不再需要浪费那么多的时间了.</p>

<ul>
<li><a href="https://github.com/willfarrell/alfred-encode-decode-workflow">Encode / Decode</a>, developed by <a href="https://github.com/willfarrell/">@willfarrell</a></li>
<li><a href="http://zno.io/RcCX">下载</a></li>
<li>触发: <code>encode</code> <code>decode</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2pKvZ6_kJuc6jkwn90DdrOihAOhM5W7fKS7-AoHkhTC41bHpKjagM54XHIYXBYOSPuxivPJ58mAmETym0mdNXAip6qJBJCkxap46HOKzj8W_E/687474703a2f2f662e636c2e6c792f6974656d732f324a336d3147314-e34363035304930453077336e2f616c667265642d656e636f64652e706e67-opt.png?psid=1" alt="" /></p>

<h2>Font Awesome Workflow</h2>

<p>Font icons很好很强大, 只需简单地输入类似的<code>&lt;i class="my-icon-name"&gt;&lt;/i&gt;</code>. 但问题是,我们经常没能准确地记住我们需要的某个icon的类名,以至于老需要去翻看文档. 现在的话通过这个workflow我们可以很轻易地查找到<a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a>的icon集.</p>

<ul>
<li><a href="https://github.com/ruedap/alfred2-font-awesome-workflow">Font Awesome Workflow for Alfred 2</a>, developed by <a href="https://github.com/ruedap/">@ruedap</a></li>
<li><a href="http://zno.io/RcJ3">下载</a></li>
<li>触发: <code>fonta</code></li>
</ul>


<p><img src="https://7nnqba.dm2301.livefilestore.com/y2pHAy4Zg3y3qg293hawHzh1DKDkB1ZUd7Ktbw9BtrL7QxRzvJPGIR-B_OUF-fjyx3wq1sn4OrZ72XCQdlHOys6gHOqyjGGbFnwiElSVCkMNxU/alfred-fonta-opt.png?psid=1" alt="" /></p>

<p>XguoX:赞!</p>

<h2>Source Tree Workflow</h2>

<p>有人习惯在终端使用Git命令, 也有喜欢使用GUI工具. 如果你属于后者,那么<a href="http://www.sourcetreeapp.com/">Source Tree</a> workflow 可以帮你列出,查找,打开Git仓库. Source Tree 也是需要在使用这个workflow之前先<a href="http://www.sourcetreeapp.com/">下载</a>安装的应用.</p>

<ul>
<li><a href="https://github.com/zhaocai/alfred2-sourcetree-workflow">Source Tree</a>, developed by <a href="https://github.com/zhaocai/">@zhaocai</a></li>
<li><a href="http://zno.io/Ro6V">下载</a></li>
<li>触发: <code>st</code>  <code>stbookmark</code></li>
</ul>


<p>使用其他的Git客户端吗?请猛击 <a href="https://github.com/zenorocha/alfred-workflows/wiki/Extras#git-client">Extras</a></p>

<p><img src="https://7nnqba.dm2302.livefilestore.com/y2peE5UpatyaBm2USKGJSTP6O-ATHnG5dIkbF_cgAXjVLyUZIJfAjCi-FdRs2E44Me5gKsYygNc6ojyzuCmFfnUnAePfelKmZpB1OmgngYUh1M/alfred-st1-opt.png?psid=1" alt="" /></p>

<h2>GitHub Workflow</h2>

<p>如果你最喜欢的社交网站是Github,那你一定会想要看看这个.简单快速地查找并在浏览器打开Github上的仓库.</p>

<ul>
<li><a href="https://github.com/gharlan/alfred-github-workflow">GitHub Workflow</a>, developed by <a href="https://github.com/gharlan/">@gharlan</a></li>
<li><a href="http://zno.io/RcPe">下载</a></li>
<li>触发: <code>gh</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2p8Kw5ylIUxXvwnWm1HOp4xQcI2AH9fPU0is_zRQvkLws07H-KINpP86ZbEvywJ8F-IbF4umwGc802UCYyAJwHbXsrQjTD5jR9eni4Hn8v-3Y/alfred-gh-1-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm2302.livefilestore.com/y2pAHDVk52bx4FuN7ArITttR0iKhUmXlAenZxif_r6XKjlY7zIdeL57L86L8wTu4a6dHOptenChQ6hdGK12mz4ia1Awc7F1kf42-nF4rKzkbrg/alfred-gh-2-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm2301.livefilestore.com/y2pca8u5ITeeKV3q7PAYkeJ26fM5wfHUmFvSjhjS3vfxHWTx8zXT5PQgeZagvY_b6gIUFTMYMdO3B5n-DnWzI-g3Gdxd7A4Tf-BQh75CSKr4UA/alfred-gh-3-opt.png?psid=1" alt="" /></p>

<h2>StackOverflow Workflow</h2>

<p>在<a href="http://stackoverflow.com/">StackOverflow</a>搜寻各类编程问题的答案</p>

<ul>
<li><a href="https://github.com/xhinking/Alfred">StackOverflow Workflow</a>, developed by <a href="https://github.com/xhinking/">@xhinking</a></li>
<li><a href="http://zno.io/RceO">下载</a></li>
<li>触发: <code>st</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2pmY5gf1twVGB0cDn-C51fasEXdMo79AFhftB4mJqKzQwshL_a0djKiDcoVu6-NP1QMQ360iBdpNf8Pp7cJ5qxc_XZbcoC_C427S0ty9cdMmI/alfred-st-opt.png?psid=1" alt="" /></p>

<h2>TimeZones Workflow</h2>

<p>现如今,很多的团队的成员纷纷来自全球各地. 那么,我们不会希望在同事的下班时间去打搅人家.所以,在这之前,我们总会先查看一下对方的当地时间.这个workflow可以巨方便地列出世界各地不同城市的当前时间.</p>

<ul>
<li><a href="http://www.alfredforum.com/topic/491-timezones-a-world-clock-script-filter-updated-to-v161/">TimeZones Workflow</a>, developed by <a href="http://www.alfredforum.com/topic/491-timezones-a-world-clock-script-filter-updated-to-v161/">@CarlosNZ</a></li>
<li><a href="http://zno.io/Rce5">下载</a></li>
<li>触发: <code>tz</code></li>
</ul>


<p><img src="https://7nnqba.dm2302.livefilestore.com/y2pEw7Fm3pjrusK0c-ihMHdrPo-1oCLOyC6kjipiDXwTsn7OJS3is0zRPDYu6Sy-M80x29f0lVww1ACceNo2LtgksPzQHW-yf0HQ4ZtgilKZVs/alfred-tz-opt.png?psid=1" alt="" /></p>

<h2>VirtualBox Control</h2>

<p>很不幸地,跨浏览器兼容的仍然是开发人员所面临的一大问题. 测试你的网站在不同浏览器 &amp; 不同操作系统 是否运行正常是件无法逃避的事. 使用虚拟机(比如<a href="https://www.virtualbox.org/">VirtualBox</a>)是当下流行的,可以完成这事的一种方式. 好吧,在用这个workflow之前老规矩,先装上VirtualBox.</p>

<ul>
<li><a href="https://github.com/aiyodk/Alfred-Extensions/tree/master/AlfredApp_2.x/VirtualBox-Control">VirtualBox Control</a>, developed by <a href="https://github.com/aiyodk">@aiyodk</a></li>
<li><a href="http://zno.io/RyOE">下载</a></li>
<li>触发: <code>vm</code></li>
</ul>


<p>在用其他的虚拟机客户端吗?请猛击 <a href="https://github.com/zenorocha/alfred-workflows/wiki/Extras#virtual-machines">Extras</a></p>

<p><img src="https://7nnqba.dm2301.livefilestore.com/y2psvNKnOmlDIHPBDdt55ZjXGXipYEXF1vywXnx7K0QWXLTlFzs34ntkNcga99mClSZGNzkG2ANop67cWYvEwkJzHDDualJDf7xIPTcKdVy3Og/alfred-vb-1-opt.png?psid=1" alt="" />
<img src="https://7nnqba.dm2302.livefilestore.com/y2pUUCXsiAOITeTEiZtDeQSoIQdmNUV0CayHgImh1MpczVHPlU-NUC0rIdVZqkztQ3bUBM7EWiu4SAkbl1eL3EMKFSsd2NFTJpjq8kDoCEJfOE/alfred-vb-2-opt.png?psid=1" alt="" /></p>

<h2>Create Your Own!</h2>

<p>所有的这些workflows都非常的赞并对于大多数人来说很有帮助. 但是,每个人的工作方式不尽相同. 所以我们需要创建真正属于自己的workflow. 其实这个也很是简单. 以下的这个例子仅需不到10秒,就可以创建一个workflow来自动搜寻Smashing Magazine.</p>

<p><img src="https://7nnqba.dm2301.livefilestore.com/y2p2GeFzQuRTl9E0-rFjNQrAw7qS_a5RAlZpfNQh9tT-P45-le3UY_fNKu7n1K5mIIq9JNdp83flsG9hvRzDHzcfXGuB56sspc6CnmRyDh2ikE/custom-alfred.gif?psid=1" alt="" /></p>

<h2>Want More?</h2>

<p><a href="https://github.com/zenorocha/alfred-workflows/">这是作者收集的一些</a><br/>
此外,Alfred的<a href="http://www.alfredforum.com/forum/3-share-your-workflows/">官方论坛</a>上也有海量的workflows.</p>

<h2>The End?</h2>

<p>一堆帮助你自动化工作流程的技巧,很赞对吧!希望能够对你有所帮助.可能这些会激发你的一些灵感,从而创造,分享你的隐藏技能.</p>

<p>如果你喜欢的workflow没有在这列出,可以在下边的评论当中跟我们分享. 如果你觉得上边提到的那些赞到爆的话,也可以告诉我们哦!</p>

<p>文章翻译自 <a href="http://coding.smashingmagazine.com/2013/10/25/hidden-productivity-secrets-with-alfred/">Hidden Productivity Secrets With Alfred</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wedding, Photography]]></title>
    <link href="http://xguox.github.com/blog/2013/10/20/diary-about-wedding-about-photography/"/>
    <updated>2013-10-20T23:37:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/20/diary-about-wedding-about-photography</id>
    <content type="html"><![CDATA[<p>随着年龄的成长,现在跟朋友在一起聊的话题似乎从以往的各种扯淡转变成了 婚姻 &amp; 工作.毕业后这些日子更明显了.这不又一对老同学结成连理了.往后还陆续有来叻！</p>

<p>昨天说到牛总明年的婚事,我和甫表示各种强烈赞成建议他抛弃那些个什么Benz,BMW,四个圈之类的去迎亲,改用超豪华得大巴更拉风  XD</p>

<p>另外,有趣的是,相较之下,初中的同学更多是谈到婚姻,而高中的则更多是谈到工作.不知道有没什么必然联系 =.=</p>

<p><img src="http://farm4.staticflickr.com/3831/10457108984_9b8950c033_z.jpg" alt="" /></p>

<p>帮牛总的婚庆工作室拍了两场婚礼,纯客串的当个没入门摄影师.总结下来,跟专业的必须有差距,无论是器材,技法,引导,后期等等</p>

<p>这其中,差距最大的还是引导这一块.</p>

<p>器材上,其实主要是缺一枚灯.这个差距最好弥补.几百块一个永诺的闪灯要能玩得转对我而言就足够了,不过略有原厂情结,刚开始还准备一步到位上 600ex 的说,反正迟迟没买,直到现在6D套摆上架&hellip;&hellip;</p>

<p>技术,后期等因素比较客观,不扯淡.</p>

<p>其实我主要是想说,我跟那天那个影楼的摄影师的最大差距在于指挥能力.人家专业的好家伙让你怎么摆就怎么摆,说集中就得集中.而我,顶多吆喝一句让人看着镜头,然后,就没然后了.其余只会跟着流程,跟着队伍瞎跑,动作好不好,站位好不好,怎么才好都没有更多的指示.几次的大合照最明显不过.另外,自己的站位,跑位也经常出现蛋疼的失误.</p>

<p>还有一个,其实还跟上面相关,交流问题.尽管是专业的,也即使是专业的,他也未必百发能百中,但是,我时常看他回看之后觉得拍不好或者动作不是摆得很到位会很自然的让被摄者再来一次,直到片子成功为止.相反的,我是经常按了快门就算了,主要是略不好意思让被摄者重复或者keep住某个动作或表情.(哪有那么多内敛,艹,你拿相机你才是老大！)</p>

<p>最后是多机的问题.其实这个问题早在之前拍各种毕业照时候就有,拍大合照之类的时候,如果面对着2台或者以上的相机(包括手机),如果不做出明确的喊话指定眼神看哪台机子,出来的照片就会很蛋疼的眼神往各个方向飘.遇上这问题,要不就霸气点喊着全场看过来,要不就商量好各台机器各司其职.</p>

<p>最后的最后,不得不感叹一下后期.</p>

<blockquote><p>数码不后期,就是大傻逼.</p></blockquote>

<p>反正绝大部分片子不后期几下都不太好意思交功课了.尽管我的后期渣一般,
但好几张完全惨不忍睹的照片被我用Photoshop,Lightroom救了回来.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying Ghost to Heroku]]></title>
    <link href="http://xguox.github.com/blog/2013/10/18/deploying-ghost-to-heroku/"/>
    <updated>2013-10-18T13:00:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/18/deploying-ghost-to-heroku</id>
    <content type="html"><![CDATA[<p>原本没有意思要班门弄斧写什么Ghost的部署感受帖的,不过前些天看到@lucifr 的这条tweet,于是还是忍不住写了,就让更多假死Ghost诞生吧.</p>

<blockquote class="twitter-tweet"><p>ghost 一出,网上又要冒出一大堆主题风格相似的 blog 了,然后更新两篇使用感受就处于假死状态</p>&mdash; Lucifr (@lucifr) <a href="https://twitter.com/lucifr/statuses/390104155152343040">October 15, 2013</a></blockquote>


<script async src="http://xguox.github.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>先来感受帖,主要是与Octopress之流相比:<br/>
毕竟还是新东西, bug,issue还有略多没解决的, 功能上也比较欠缺.不过好的地方在于这个移动支持好,  就算在野外拿着移动设备也是可以杠杠的写东西, 只是有多少人如此热衷到必须在室外用移动设备来写呢?还一个是数据的导入导出很简便.</p>

<p>因为以前玩过Heroku, 所以不用各种安装<a href="https://toolbelt.heroku.com/">Heroku Toolbelt</a>,配置SSH key什么的. 也玩过Node, 好吧,这个也省了. (好吧, 我是不是可以不用写下去了 =.= ) 其实主要只是写写这个过程遇到的一些问题吧. 系统是 OS X 10.8.5</p>

<p>在Local安装Ghost(当前最新版本为0.3.2)</p>

<p><a href="https://en.ghost.org/download/">下载</a> 源代码并解压, cd 过去, 在Node和NPM安装配置没问题的前提下
<code>npm install</code>
在本地跑起来
<code>npm start</code>
基本没报错就往后走不折腾, 也可以在浏览器玩儿一会先的.</p>

<p>接着是让Heroku知道怎么把Ghost跑起来, 执行
<code>echo "web: node index.js" &gt; Procfile</code>
在Ghost目录 创建<code>Procfile</code>文本文件并写入<code>web: node index.js</code></p>

<p>部署到Heroku用的数据库是PostgreSQL, 而不是Ghost默认的sqlite, 所以要先在
<code>package.json</code>这个文件里头做些修改, 在<code>dependencies</code>节点把sqlite的那行去掉改为</p>

<p><code>"pg": "latest",</code></p>

<p>别忘了刚开始在本地跑起来的时候已经安装了sqlite3
所以,还要执行
<code>npm uninstall sqlite3</code></p>

<p>下面的一篇参考里头没有提到这点.</p>

<p>准备就绪后就是初始化Git仓库了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init
</span><span class='line'>git add .
</span><span class='line'>git commit -m "Init"</span></code></pre></td></tr></table></div></figure>


<p>本地有了Git仓库,还要有个Heroku的远程库,创建项目
<code>heroku create</code>
执行完之后在Heroku的Dashboard看到你的项目了,不过是啥都没,因为还没有push.
生成的项目一般都是类似这样名字很帅的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Creating fathomless-reaches-9699... done, stack is cedar
</span><span class='line'>http://fathomless-reaches-9699.herokuapp.com/ | git@heroku.com:fathomless-reaches-9699.git</span></code></pre></td></tr></table></div></figure>


<p>配置数据库之前先装个PostgreSQL的插件.</p>

<p><code>heroku addons:add heroku-postgresql:dev</code></p>

<p>该命令会输出<code>Attached as HEROKU_POSTGRESQL_BLACK_URL....</code> 类似的信息,其中的BLACK是随机的颜色单词. 下一步命令要用到的.</p>

<p><code>heroku pg:promote HEROKU_POSTGRESQL_BLACK</code></p>

<p>插件安装就搞定了,接下来是配置文件. 编辑根目录下的<code>config.js</code></p>

<p>主要要改的地方都在development下, 没发觉不同模式的区别, 如果发图片是用上传的方式的话,在每次push之后图片都会没掉,所以还是用外链好了, 用production也一样,记得改环境变量<code>
heroku config:set NODE_ENV=production</code></p>

<p>1 url
比如这里改成<code>  url: 'http://fathomless-reaches-9699.herokuapp.com',</code>
2 database
这里要先登录到你的Heroku的Dashboard, 在你的app下可以看到插件栏的<code>Heroku Postgres Dev :: [Color]</code>,点进去就看到你的数据库的各种配置信息,如下图:</p>

<p><img src="https://g3axqg.dm2301.livefilestore.com/y2pAXIXhAaAoKzlQnO0BMJtfAxFJpGGYjlu_qbNuISsChkrL3vj1grBXJW0RDIbw1kZPze2If1ZX_jQDNy9SDU-8RpPHYc94USB54Mx7Dc6r04/QQ20131018-3.png?psid=1" alt="" /></p>

<p><img src="https://g3yyhw.dm2302.livefilestore.com/y2pKkKpTuU-QBtu3ZzKEfcZGPiHuH_oRCDn1dBt7N0wCh9uLkSGkqdjbc8f09uPvejIoGEOoUdn-IQICWWQVUCIvI3ZGdECSNfyRgXtd4JrTRo/QQ20131018-4.png?psid=1" alt="" /></p>

<p>相应的把<code>config.js</code> development下的database修改成如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>database: {
</span><span class='line'>        url: 'http://fathomless-reaches-9699.herokuapp.com/',
</span><span class='line'>        mail: {},
</span><span class='line'>        database: {
</span><span class='line'>            client: 'postgres',
</span><span class='line'>            connection: {
</span><span class='line'>                host: 'ec2-54-235-92-161.compute-1.amazonaws.com',
</span><span class='line'>                user: 'tgbutpeekudvst',
</span><span class='line'>                password: 'POpn0EK7TNfW1nfgVDsXgw_N4L',
</span><span class='line'>                database: 'd3399k1nh326po',
</span><span class='line'>                port: '5432'
</span><span class='line'>            },
</span><span class='line'>            debug: false
</span><span class='line'>        },</span></code></pre></td></tr></table></div></figure>


<p>3 server</p>

<p>将原本的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    server: {
</span><span class='line'>           host: '127.0.0.1',
</span><span class='line'>           port: '2368'
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    server: {
</span><span class='line'>        host: '0.0.0.0',
</span><span class='line'>        port: process.env.PORT
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>然后就可以提交准备push了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> git add .
</span><span class='line'> git commit -m 'for push'</span></code></pre></td></tr></table></div></figure>


<p>最后Push到Heroku
<code>git push heroku master</code><br/>
其实, 后面才是我要写的点. 当我执行这条命令时,
不断报错如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Received disconnect from 50.19.85.132: 10: user closed connection
</span><span class='line'>error: pack-objects died of signal 13
</span><span class='line'>error: failed to push some refs to 'git@heroku.com:fathomless-reaches-9699.git'</span></code></pre></td></tr></table></div></figure>


<p>话说表示至今没找着原因和解决方法.
求救于Google和StackOverflow的大神也不行. 什么<code>git repack</code>的不起作用. 后来发了个ticket给heroku求助.貌似没鸟我,但是第二天忽然就好了,能push了.然后前一秒push出错,没过一会再push又成功了.</p>

<p>另外的还有一个地方下面的参考没有提到的是, 成功部署上去后打开链接可能你会看到这样的错误信息</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>An error occurred in the application and your page could not be served. Please try again in a few moments.
</span><span class='line'>
</span><span class='line'>If you are the application owner, check your logs for details.</span></code></pre></td></tr></table></div></figure>


<p>这东西也纠结了我老久,Logs显示
<code>ERROR: Invalid value, check page, pages, limit and total are numbers</code><br/>
没找着原因,后来在官方的Forum上看到的解决办法,是把<code>content/themes/casper/index.hbs</code>里头的  {{pagination}} 注释掉.</p>

<p>然后,就没然后了, 部署完毕,打开你的项目链接玩儿Ghost吧.</p>

<p>另外试过用Mysql作为数据库,但是因为Heroku上唯一的Mysql插件<a href="">ClearDB</a>用了之后会有权限<a href="https://github.com/TryGhost/Ghost/issues/863">BUG</a>,貌似官方还没解决. 所以还是老老实实的用了PostgreSQL</p>

<p>主题的话,<a href="http://marketplace.ghost.org/">这里</a>有收费和免费的可以下载, 下载下来copy到<code>content/themes/</code>这个目录下就OK了, push之后就可以在你的设置页面里直接更换了. 好吧,这样的话&#8221;一大堆主题风格相似的 blog&#8221;就不能出现了啊.</p>

<p>另, 评论也需要另外添加设置, easy job啦. <a href="http://christophvoigt.com/enable-comments-on-ghost-with-disqus/">参考这里</a></p>

<p>参考资源:</p>

<p><a href="http://docs.ghost.org/installation/">http://docs.ghost.org/installation/</a><br/>
<a href="http://www.howtoinstallghost.com/how-to-install-ghost-on-heroku/">http://www.howtoinstallghost.com/how-to-install-ghost-on-heroku/</a><br/>
<a href="http://d5c.me/deploying-ghost-to-heroku/">http://d5c.me/deploying-ghost-to-heroku/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[换主题说起,再思,写blog为哪般]]></title>
    <link href="http://xguox.github.com/blog/2013/10/16/thinking-why-blog/"/>
    <updated>2013-10-16T17:40:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/16/thinking-why-blog</id>
    <content type="html"><![CDATA[<p>隔三差五会把Octopress的主题换一换, 换件衣服换个心情.</p>

<p>这次换的是这么多次更换以来个人觉得最赞的一次,基于<a href="https://github.com/tcnksm/mnmlpress">mnmlpress</a> , 貌似这个源项目也是fork自另外一个改编而成的.  然后那一个也是同样.  Anyway, Octopress的主题大部分都这么改成的.</p>

<p><img src="https://gagqnq.dm2301.livefilestore.com/y2pgGB6njkMoSbIBHSyZvsFl-NyXsUiNM9YF0L4d-xGZJLZF2xD_eGpNCI3ehRiwcuFbOjCdPOgHQDwKZGRvgRimDbLhmdcR0xmFwNUBPb2c20/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202013-10-16%206.22.11%20PM.png?psid=1" alt="" /></p>

<p>And then, 我突发脑热, 征询了几位朋友的意见,分别列出了4个主题样板让他们给我意见评分. 很不幸, 这一次的更换的平均得分最低. 上一个使用的(如图)得分最高.</p>

<p><img src="https://h0jiyg.dm2302.livefilestore.com/y2pX0zFxCmooR-IGec_cSnXt7Dw5lkxR3EK84t5izNfkvsQGtZW5J0aVocESCzuQFSIDHldl5q_feGSNzJ_P0-Ysa6nU4dMRzOE9XzYLBjFfhU/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202013-10-14%202.15.08%20PM.png?psid=1" alt="" /></p>

<p>说意外也其实不意外,单纯从UX上说的话我也觉得上一个蛮不错的. 丰富的sidebar啊, 各种share啊, category, 还算协调的配色啊, 甚至乎还有个微博的widget等等. 整个页面,能提供的信息基本都有了, 虽然排版的还算有序,但感觉还是有种说不出的乱
相比之下这个新主题会各种操作不方面,体验不佳.  甚至,可能会让人觉得这根本不能称作是主题,什么都没有.就一个banner, 一个Archives页面.没有丰富的sidebar,没有各种share, 也没category, 颜色, 不单白,还很白, 朋友说的,看久了还眼累,  连翻页也都没了.
自己数落着都觉得太不像样了.</p>

<p><strong>于是引发了我的一个疑问, 这写的东西我是要给自己看呢?还是给其他人看呢?进而引申的疑问, 为嘛要写blog.</strong></p>

<p>如果这里所要考虑的用户只是我自己的话,那一切都可以随意地按我自己的性子来修改,自己看着爽就行. 其他什么的自己想要就加不想要就减. 好比这次, 用上这个极简的主题,自己看着特舒服就成,  觉得缺个navigation,就自己加了上去. 毕竟我不是在做产品给别人用, 犯不着还要蛋疼的去看看在IE6-8下长什么样子吧.
如果是主面向其他读者,那我必须考虑更多的是用户阅读操作等体验. Right?</p>

<blockquote><p>要么追随自己,让大众去评说,要么追随大众,压抑自己的内心</p></blockquote>

<p>当然了,这是在假设我的blog有观众的前提下. 由Google Analytics所得, 我的Blog日均访问一般都在20次左右.可能偶尔不小心写了一篇或者翻译了一篇比较nice的文章,会稍稍飘高一点点,也很快就回落下来.</p>

<p>在这种巨低访问量的情况下, 写Blog是否还有意义.<br/>
我的判断是, 在这里,首先是写给自己看的, 记录思考, 其次才是为观众们寻找看点,分享发现, 从而收获评论交流甚至谩骂.</p>

<p>除去照片,对我这种怀旧党来说,文字就是最好的记录工具了.看看老照片,看看老文字,,,,,,,,,,,,,,,,,,,,,瞬间觉得自己老了好多(抱歉在传递负能量).我这才写了几年,等写了十几年,几十年回来看 XDDDD</p>

<p>事实上,其实现在还蛮后悔以前有时候会有所顾忌,常常怕别人看了会觉得想法很无聊很幼稚很扯淡,所以没都记录下来. 总会觉得自己积累的底子不够多.  包括现在, 觉得写出来的东西难登大雅之堂的主要原因就是积累的不及高玩们那么多. <br/>
但是,积累可不是一个瞬间完成的动作,不写点不靠谱的东西出来,何时才能积累出靠谱的.</p>

<p>在量和质都不高的前提下, 没有观众那再自然不过.  想要观众的话其实也不难吧, 把链接往热闹的地方一贴, 花更多些的心思写的美美的投个稿, 那铁定不会那么惨淡的访问量. 不过还是说到底,第一是给我自己看的,所以没有很care的写一篇帖一篇.<br/>
文字写出来未必就必须是给读者看的(有读者肯定是好, 不想要读者的也不会用公开的方式去记录了),偶尔回顾自己曾经写过的文章,目睹自己进步与否,有何改变, 除了记录下来还有别的好的方式吗?</p>

<p>P.S. 写blog另一个目的是想要捣腾一番这些程序, Octopress啊,Hexo啊,以前小弄过一会Wordpress就没继续玩儿了. 原本甚至还准备去弄一弄Haskell版本的<a href="http://jaspervdj.be/hakyll/">Hakyll</a>.
还有刚发布的<a href="https://ghost-xguox.rhcloud.com/">Ghost</a>, 题外话,Ghost的Markdown支持比之简书好的是预览跟随原文同时滚动, 另外移动端的Markdown体验也要稍好点.  Anyway, 定位不一样不扯淡, 再说可能林立君早用不着预览了吧=.=</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简书,Safari(Mac),Bug?]]></title>
    <link href="http://xguox.github.com/blog/2013/10/13/jianshu-tiny-bug/"/>
    <updated>2013-10-13T22:26:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/13/jianshu-tiny-bug</id>
    <content type="html"><![CDATA[<p>前不久在<a href="https://twitter.com/XguoX_L/statuses/388577622990389248">twitter</a>跟@larry 反馈了的Bug,但是当时很快耍着耍着就没了,又正常了,于是撒手结帖了.然则,比较奇葩,刚刚又不小心再现了,虽然只是很微小的一处不妥,但影响到UX的话, 我表示有点轻微的强迫症,外加Twitter上 140 字符配以我的文字水平不足以表述清楚.所以还是写作文好了.</p>

<p>鉴于上一次滚动条受Thunder插件的影响,所以这次我把Safari的插件全关了.(同样方式,其他浏览器无任何异常)</p>

<p>这个Bug是这样的:</p>

<blockquote><p>删除文章的垃圾桶icon在Safari下hover在中间和右边表示不能点选(如图,鼠标未改变),只有hover在偏向左侧的地方才work,其他浏览器正常.</p></blockquote>

<p><img src="https://7nmnbw.dm2302.livefilestore.com/y2pMd9Hqqq8zcLNm4HmC2VAXY0If8JNgrxOQ_YyS5esT5C65NGiPyPXRGBas-Ggdk13KnyUpKqHmk7maKNQ2A29iNMWEjSIoPGIErQmhg0Akzo/tu1.jpg?psid=1" alt="" /></p>

<p>正常情况下(鼠标的形状)应该是</p>

<p><img src="https://7nomkg.dm1.livefilestore.com/y2pnQSLb70jLri1R75fAlctMv9tStL7PtnGGP3-9mbRg3ncEeEmRaKOTcxCzdUxpjxXlxMBvtFfQzeR39oxhEFQLiojchvoAQj1RUHvqOvOda0/tu2.jpg?psid=1" alt="" /></p>

<p><strong>为什么偶尔会正常,偶尔抽风?</strong></p>

<p>请看下面两图,看看有啥不同</p>

<p><img src="https://h0hcka.dm1.livefilestore.com/y2pA5ROBtWFdo3kL875emP4XeTT-N7OzbNPXLq1AmqEx1XYSHM40ObSCBL5lkCK1GXPKC1BxSDd8EUsKiyjNWP8ZbC75vhdLewfOKOBLrSd_j4/tu3.jpg?psid=1" alt="" /></p>

<p><img src="https://h0j3ba.dm2302.livefilestore.com/y2pibC_etDmFwTYabbHWr8bXvV4USwL-NF922Ax2NkXzIH6kOYg4uxNoVs-AKL5c0qJH74vJssJxcziLn2TMu43YVVuIZ81IDDOqhzP0d-iA_o/tu4.jpg?psid=1" alt="" /></p>

<p>经反复的、<strong>不严格的</strong>控制变量法实验,目前我的解释是,当一个文集里边的文章数量足够多到出现中间栏的滚动条之后, 就会出现这个删除icon不正常的状况.</p>

<p>至于,为嘛出现这种情况,留给简书的小伙伴们吧.</p>

<p>请使用Mac的用户帮忙测试看看,看是通病还是我个人机器、软件等出了问题.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[由OP最近的拖剧情说起]]></title>
    <link href="http://xguox.github.com/blog/2013/10/11/one-piece-recently/"/>
    <updated>2013-10-11T20:31:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/10/11/one-piece-recently</id>
    <content type="html"><![CDATA[<p>尽管在我的个人Tags里边经常标的无非那几个,Code,摄影,One Piece, 也无碍接下来抱怨几句最近的OP(动画).</p>

<p>追着OP的看官不难发现,最近动画明显是各种拖剧情,某很多些神情,某大量的回忆篇加强插入,某动作刻画的时间,都Y的太太长了.而且还不少不断重复的画面,镜头来回转换加深刻画.</p>

<p>最近几集没有深究,好吧,表示开始习惯了.<br/>
印象最深的是610话, 标题明明是 两位中将的xxxxxx
结果整集下来一半的镜头给了 M, <br/>
剩下的一半当中有四分三是在各个场景之间切换,
真正看维尔戈跟斯摩格过手不知道有没5招,目测镜头时间不超过3分钟!!!</p>

<p><img src="https://7nnpba.dm2301.livefilestore.com/y2pgFj_q49UBPpAcVG8GOjIkuYoUDgDLbkrcYsFN55uNtMt7jyaTDEs7yPZkRvJ2OK1GdmTBGtbWxoKWTflwela5a7VAH6noYahLwCuXS_V5SE/QQ20131011-2.png?psid=1" alt="" /></p>

<p>表示理解动画要拖拖剧情等漫画,但这拖得略不靠谱了吧.如果只是为了等漫画,那我觉得偶尔直接来个停播会好点呢?完全可以理解啊,就像漫画前不久也停刊好几回,当然那是照顾到尾田大神的身体状况,不管怎样,完全可以理解.又或者跟以往那样来些个什么番外篇打酱油,也都总比这样把一集的剧情拖沓成这样要好.</p>

<p>相比之下,漫画的剧情引导显得顺多了.  以「顶上战争」作为分界的两年后的新世界篇,在漫画里头与两年前的剧情相比有过之而无不及.但在动画里头,给我的感觉却是,比之两年前的剧情,那是相去甚远,之所以产生这种心理,应该是缘由这剧情拖沓.反正1 &ndash; 570+的动画重看了N次,没有一次说是强烈地觉得剧情拖沓跳过哪一集.而今,好几集好几次我都想按快进 =.=  但还是没有按下去. 难道,是因为时间的作用使之沉淀下来,难道现在的剧情也要等过上些时间沉淀才会打消这些感觉?</p>

<p>最后,我发觉并深感OP里最喜欢的不是Luffy君,说不上谁是最喜欢的角色,但,可以肯定,对 罗宾酱&amp;索大 的喜欢更多一些.</p>

<p><img class="left" src="https://7nmgwa.dm1.livefilestore.com/y2piowWh9rmGFKLaMMZX9p0hjieu0nhXYeJLNicKrqCqu44Ai-nJgUbgIl4ELt5Nty2DCHO6Gd0GHh-GagLaN3XOkefcg5FVZON8l0UQm1yxLE/Nico.Robin.full.1401954.jpg?psid=1" width="350" height="600">
<img class="right" src="https://7no7na.dm2301.livefilestore.com/y2pyPdpo4WPWPKcGC9nYQoI5vn_BOqO2S31h64Nh-nGZZq4T99T8w3lNT_JVot7o9u9Xeh9g31anmx7mBgY8vnmGza_wDQMYvm9flRIYiUxsVU/7f4996e7jw1e5c2o3526nj20bu0goaar.jpg?psid=1" width="350" height="600"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Back to Code]]></title>
    <link href="http://xguox.github.com/blog/2013/09/27/back-to-code/"/>
    <updated>2013-09-27T14:12:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/09/27/back-to-code</id>
    <content type="html"><![CDATA[<p>好多年以前,在「街头篮球」这款游戏看到过的一句,「一天不碰球,就一天没长进」.<br/>
而今,我是好几个月没真正意义的code,所以,这状态,想不roll back都难,更何求长进.</p>

<p>真心,重头来过也忽然无从下手.</p>

<p>打开Octopress准备更新,发觉连Git的一些命令的想了好久才想起来.</p>

<p>看到Git的提示里冒出有
 <code>
git bisect reset
</code>
这货功能很强大呀,昏了,之前怎么完全没印象有过着玩意的?又是学艺不精啊!</p>

<!-- more -->


<p>想把Octopress更新到2.1,一直略期待着,却一直在preview状态,今儿却才发现,2.1的branch挂了,倒是多了个 3.0的branch.</p>

<p>好吧,老规矩的话,那就换个新面孔好了.这不流行Flat-UI嘛.发现一个还不错的&mdash;&ndash;<a href="https://github.com/alexharris/octopress-flat/">octopress-flat</a>.加上自己做一些些个修改.</p>

<p>and then 准备new_post的时候报了这玩意,奇葩了,之前zsh貌似不见报这错的啊?难道几个月不碰就变的面目全非了.
<code>
zsh: no matches found: new_post
</code></p>

<p>搜之,在~/.zshrc 里添加
<code>
alias rake="noglob rake"
</code></p>

<p>前些时间落下了好多东西,包括刚着手的翻译行当还有初尝Meteor.</p>

<p>在写简书那会,虽远远称不上精通全端、一锅端,但也绝不至于像现在这样什么都端不起来.
现在想再端起来,还要各种瞻前顾后的,连端啥都决定不好.</p>

<p>想来,回上海或者北漂几乎没啥可能,尽管我很enjoy上海那段日子.so,目测往后也是在珠三角荡悠.要是能找到一份remote job,那就更好不过了.说起来,一直很想去佛山那家创业公司.前年还是他家boss指引我才开始知道并用上Github.现在是更想去了,因为他们支持远程工作 XD</p>

<p>but,现在的我比起11年那会还不行.这情何以堪.</p>

<p>好吧.Anyway,一切都只能等痊愈再说!</p>

<p>消沉够了就要回到正轨奋斗了.好好利用这几个月.</p>

<p>接下来&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..要不要,从HTML重新开始呢呢呢,不知道俺的Ruby/Rails 还剩几多斤两呢, 好吧,都不是, 从工具开始, 回归使用Vim好了&hellip;&hellip;&hellip;&hellip;&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[照片的故事]]></title>
    <link href="http://xguox.github.com/blog/2013/06/03/photos-and-stories/"/>
    <updated>2013-06-03T16:30:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/06/03/photos-and-stories</id>
    <content type="html"><![CDATA[<p><img src="http://farm8.staticflickr.com/7332/8942652946_af9121957f_n.jpg" alt="" />
<img src="http://farm8.staticflickr.com/7289/8942653776_bdfb3e28a3_n.jpg" alt="" />   <br/>
那时候,你们在想着什么,仅仅只是摆着姿势那么简单吗?<br/>
你说我穿的太colorful了,没有你那么忧伤  <br/>
要是我的最深处也这般colorful那该多好</p>

<p><img src="http://farm8.staticflickr.com/7432/8942651358_e04d1e5d94.jpg" alt="" />
<img src="http://farm4.staticflickr.com/3732/8942025755_d37f645d5d.jpg" alt="" /><br/>
不知道你是望着天空还是闭着眼睛,我自己也忘记了<br/>
草地不很舒服,但给的感觉却让人享受着可以睡去</p>

<!-- more -->


<p><img src="http://farm8.staticflickr.com/7350/8942022805_03c7825513.jpg" alt="" />
<img src="http://farm6.staticflickr.com/5346/8942644888_259c5a6e7e.jpg" alt="" /><br/>
背影总给人有沉重感,仿佛,这些年的影子都被呈现出来了.</p>

<p><img src="http://farm9.staticflickr.com/8538/8942627584_def59fc38f.jpg" alt="" />
<img src="http://farm4.staticflickr.com/3757/8942628346_e2ac194f1b.jpg" alt="" />
<img src="http://farm4.staticflickr.com/3723/8942002947_60ddc9872b.jpg" alt="" />
<img src="http://farm6.staticflickr.com/5328/8942627264_17b43443fa.jpg" alt="" />
<img src="http://farm9.staticflickr.com/8272/8942004051_e1ee9b1655.jpg" alt="" />
<img src="http://farm8.staticflickr.com/7387/8942626614_68f3ce0409.jpg" alt="" /><br/>
路,一个人走,两个人走&hellip;回头,总能望见你</p>

<p><img src="http://farm4.staticflickr.com/3722/8942006795_499d3efaf2.jpg" alt="" />
<img src="http://farm9.staticflickr.com/8136/8942630138_91654db5d7.jpg" alt="" />
<img src="http://farm4.staticflickr.com/3799/8942011361_e2d201dae8.jpg" alt="" /><br/>
路过的行人都不自觉就把我们设为焦点,或轻轻一笑,或心有所思,谢谢为我们合照的那个人. <br/>
说自己垃圾,说自己病痨<br/>
我情愿被你们这么说<br/>
也不要自己自嘲</p>

<p><img src="http://farm3.staticflickr.com/2837/8942001679_4fb28efb7b.jpg" alt="" />
<img src="http://farm6.staticflickr.com/5335/8942002583_080e5a9e0d.jpg" alt="" /><br/>
低头,抬头,仰望,俯视,在同一个位置</p>

<p><img src="http://farm8.staticflickr.com/7348/8941980615_d394b6f30f.jpg" alt="" />
<img src="http://farm3.staticflickr.com/2850/8941978751_2d21c5ec0b.jpg" alt="" /><br/>
你说,车站总给人有一种说不出的感觉.<br/>
我说,等,等待,等车,等人&hellip;</p>

<p><img src="http://farm8.staticflickr.com/7359/8941984311_fd5057e945.jpg" alt="" />
<img src="http://farm8.staticflickr.com/7385/8942620208_e60bb022e2.jpg" alt="" /> <br/>
你想拥抱雨,正如我也那么想被雨穿透</p>

<p><img src="http://farm6.staticflickr.com/5464/8942610446_8b5ce4132e.jpg" alt="" />
<img src="http://farm4.staticflickr.com/3676/8941991289_ef499b456b.jpg" alt="" /><br/>
无力的文字已经不足以描述我有多爱这两张照片</p>

<p><img src="http://farm4.staticflickr.com/3665/8941981741_85e92f11b2.jpg" alt="" /><br/>
多谢路过的小师妹,一开始,因为我之前把ISO设置到了6400,还开着闪光灯,闪瞎了&hellip;折腾了几下才发现问题.<br/>
小师妹问,你们是大四的师兄吧?<br/>
我可以这么回答吗?我们还在读高中!</p>

<p>从未想过摘下腕带,尽管它们普通的甚至有些寒酸,也不是谁的珍贵礼物,只是我自己给自己的地摊货,但它们好像是替代你们看着我.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[负能量 - 从支纤镜说起 - 正能量]]></title>
    <link href="http://xguox.github.com/blog/2013/05/14/negative-energy/"/>
    <updated>2013-05-14T23:05:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/05/14/negative-energy</id>
    <content type="html"><![CDATA[<p>尽管日期标的是May,但是写的时候,是在April 27th &ndash; 并刚做完支纤镜 &ndash; 耳边塞着耳机,麻醉也还在,全身如喝醉酒那般,浑坨坨,当然只是轻度的,不然我也不可能写的出这些.<br/>
被病魔缠着也有半年了,目测还得继续治疗休养多半年.<br/>
说说这个支纤镜吧.第二次做.比起第一次,尽管有了些许经验(也正因为有经验),做之前还是有些小紧张,表现主要有心跳略有加速.很重要的一点上次的医生没说而这次的医生教了,&ldquo;(粤语)吞口水,无口水就做吞口水噶动作&rdquo;.难受是必须的,在某个point我一个没忍着,口中就吐了一堆我自己也看不着啥,anyway,死不了.</p>

<p>耳机里播放着《仓颉》</p>

<!-- more -->


<p>只有我一个人在医院,不要问我爸妈在哪,他们比任何人想在我身边,只是我比较脑残,他们越是关心我我越不让,总会吼回去(脑残吼?呃,俺不是BL老大)关于这点我觉得我应该去看看心理医生.<br/>
好吧,其实我觉得不单这个我也要去找找心理医生.患病的这些日子以来,已被打磨的没有任何锐气了.<br/>
身上多了一道大疤痕,尽管日常情况下几乎看不到.但是要是裸身照着镜子还是会被吓呆.再加上,看着自己瘦得这副排骨身板,哎,同样的那么大的痕,在Luffy和Zoro身上怎么能那么酷!<br/>
身体的不堪,也让我辞去了工作的机会,好吧,实习.我坦然接受了,毕竟,我认识了 @linlis 他们,我的技术、认识也得到提高,好吧,我承认好久没碰过Ruby/Rails了.尴尬,连语法都生疏了.<br/>
所有的这些,比较尴尬的是工作吧,看着身边认识不认识的同学拿到好的坏的offer,而我…即使再过些时日痊愈了…赶脚被拉开距离了&hellip;</p>

<p>大四,大四下,是个奇葩的学期,各种琐事,课程重修,毕业体检,毕业照,毕业论文,外加这最麻烦的肺.心里头压根没法真正静下来学习(Front-End).so,其实这些时间我只是在翻译一些国外的技术文,以meteor为主.</p>

<p>耳机里播放着《十面埋伏》</p>

<p>但是,一看到雅安的状况,我瞬间觉得自己更弱爆了,比起那儿的灾难,难道不是幸福的吗?我™还要愁毛线撒?<br/>
我是个会反思的人,这点必须赞自己,但是,在这个思之后,却似乎没有省.<br/>
我自我安慰,完全不用焦急任何的东西,身体最最最™重要.<br/>
我心里总对自己说,大不了晚毕业一年呗,反正本来就比同班的普遍小了一两岁.可是我会这么想,却不会这么去接受,总是心不甘.有点渴望离开校园.<br/>
某些时候,我会装的很孙子,而某些时候,却又一点都不肯示弱.</p>

<p>耳机里播放着《the dawn》</p>

<p>某一个晚上,石头酱开导我说,你不要辣嚒大的报复心(抱负)啦!  这个引发了我想了关于抱负好久.有很大的抱负吗?我没要去改变世界,撬动世界啊,就想安安乐乐的enjoy着写代码而已. 我原本是这么以为的.</p>

<p>写到这,麻醉也去了7788了,不过手上还是插着吊瓶的针.耳机里播放着《数码暴龙1 主题曲》,LOL,略脑残是伐?不单这首,还有,《One Piece》的所有OP,《龙珠》的某一部OP,还有几首以前翡翠台播的动画的主题曲.Anyway,Don&rsquo;t u think they are fucking awesome and memorable?</p>

<p>在医院呆着其实也没什么不好的,至少的,我的作息正常的多,早睡早起,杠杠的,偶尔还能瞄瞄护士(看口罩是伐?) ,写到这我想起刚刚做完支纤镜荡回来的路上很巧的遇上,几个月前同一病房的病友的老婆,然后就混混沌沌的跟她扯了一会,尽管她戴着口罩(我居然还能认出来),不过看得出比之前那会憔悴了许多,正如我家的两老也是.想来他老公会比我要承受稍大一些的心理压力,上有老,下有小&hellip;所以,横看竖看,我还是得跟自己说,不是什么大事.</p>

<p>写到这,换针水,鸽的血倒流出来了.a~ a~ a~ a~ 护士妹纸,快来啊!!!<br/>
写到这,耳机播放《其实我介意》<br/>
写出来,即使没人看见,也总比藏在心里舒服!!!</p>

<p>=================================================</p>

<p>May 14th</p>

<p>我不是一个适合传递正能量的人, 因为我身上似乎充满负能量, 或者很轻易就陷入进去.</p>

<p>这不是一次好的&#8221;散步&#8221;,我带去了不少负面情绪.与初衷背道而驰.</p>

<p>听到你妈妈对我讲的那些, 除了揪心还是揪心, 只因我也曾经深切的体会过那般剧烈的苦痛.因为有过切身体会,所以仅仅是几句简单的描述,足以让我想象得到那些场景.或许某些东西上你比我更痛苦. 那些我未曾经历的…</p>

<p>原来我们还会有这么个共同点,都有这样的坏毛病,都那么的不希望被担心.尤其是至亲.不到真正必要时刻绝不想麻烦他人,即使是至亲.即使躺在那张让人浑身不自在的病床也不愿落下看书.(这点毕竟还是你强悍啊,我之前也就床头边摆着《失控》或者《JS高程》,而你从床边到抽屉再到一书包的,各种书.)</p>

<p>正因为这么的相似,所以,那一刻,我真不知道该说什么回应这位悲伤的母亲.</p>

<p>今天这种尴尬不能再有!</p>

<p>咱不该比谁更悲惨,我也不该过多抱怨自己的这个悲剧,这都不应该.</p>

<p>但确实性格使然.</p>

<p>忽而发现我真的不知道如何去安慰一个人,因为我满脑充斥的都是负能量.</p>

<p>于是,决定解放自己,摆脱负能量,从自己开始.</p>

<p>祝福</p>
]]></content>
  </entry>
  
</feed>
