<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sublime | XguoX]]></title>
  <link href="http://xguox.github.com/blog/categories/sublime/atom.xml" rel="self"/>
  <link href="http://xguox.github.com/"/>
  <updated>2013-04-19T22:23:49+08:00</updated>
  <id>http://xguox.github.com/</id>
  <author>
    <name><![CDATA[XguoX]]></name>
    <email><![CDATA[golvinlu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[扯点Sublime]]></title>
    <link href="http://xguox.github.com/blog/2013/04/11/jabber-sublime/"/>
    <updated>2013-04-11T18:33:00+08:00</updated>
    <id>http://xguox.github.com/blog/2013/04/11/jabber-sublime</id>
    <content type="html"><![CDATA[<h2>Fxxk Jabber</h2>

<p>回想起初初接触编程语言的时候, 特喜欢折腾IDE的玩意, 什么visual studio啊, Eclipse啊, Netbeans, Aptana的会不会用好不好用都不管了, 装进PC再说, 怎么说, 很傻13的觉得我的PC里有这些工具我就牛13了, 熟不知真正的编程知识却木有学到, 后来搞Ruby开始放弃笨重的IDE改玩Vim和Sublime Text, 当时Textmate被捧上天不过木有Mac耍不起. <br/>
换了Mac了, Textmate2也开源了, 于是也装上耍了耍. 没多久又继续用Sublime Text了.  OOXX来来去去, 这两货其实真没差多少. 好吧, 是我用的都不够透彻. (T . T)</p>

<h2>Theme</h2>

<p>有时候蛋疼起来可以折腾某个主题某个配色好长的时间, 即使这对我的编程技能木有任何实质性提高.  强推一款theme - <a href="https://github.com/thinkpixellab/flatland">Flatland</a>,  随着Flat UI的兴起, ST的主题肿么能落后啊.  附带的icon更是比Sublime原本的霸气的不是一点两点啊. 貌似在哪见过, 想不起来了.
<img src="http://farm9.staticflickr.com/8392/8636887917_4db9f0f2b7_b.jpg" alt="" /></p>

<p>这UI还行吧? 我自己也懒得再去调了, 额外的把cursor换了个色就是了(原本的灰色真心不够骚啊, 老是眼瞎找不着)</p>

<!-- more -->


<p>说到theme就想起这个正在用着的<a href="https://github.com/aziz/knockdown">Knockdown</a> Package -Markdown文件专属的主题, 再配上Sublime Text的<strong>Enter Distraction Free Mode</strong> 用写静态Blog很带感叻, 对不对.  有时候, 巨爱这个模式. 舍不得Sublime的原因之一<br/>
<img src="http://farm9.staticflickr.com/8264/8638936015_31cde7d54f_b.jpg" alt="" /></p>

<p>之前也试用过<a href="https://github.com/ttscoff/MarkdownEditing">MarkdownEditing</a>, MarkdownEditing的高亮做的没Knockdown那么好(说实话, Knockdown的代码块的高亮配色不怎么符合我的style, 太过偏暗偏沉, 但总比木有高亮来得强), 挺喜欢ME的默认放在center这一点, 但是, 在<strong>Enter Distraction Free Mode</strong>下, 这个优点也就荡然无存了.</p>

<h2>Packages</h2>

<p>每个用Sublime新手老手都会介绍强推的<a href="http://wbond.net/sublime_packages/package_control/installation">Package Control</a> 插件管理就不再累赘啦.
Actually, 想装啥插件可以直接在里头搜, 或者网页版搜索, 一般都会给出相应的github开源链接. 装什么插件就更是因人而异的.  比如如果从来不写Markdown的那就木有必要装我上面说的那货.  又比如, 如果是重度Hacker News 用户的话, 直接搜hacker news(其实在"Install Package"上输入hack就已经跑出来一堆相关让你选择), 当然也不是啥都有的, 如果搜的是reddit就没看到结果了.</p>

<p>个人用的目前装着的packages有:</p>

<ul>
<li><a href="https://github.com/alienhard/SublimeAllAutocomplete">All Autocomplete</a> 这货是在已打开的文件的基础上拓展匹配的</li>
<li><a href="https://github.com/aziz/knockdown">knockdown</a></li>
<li><a href="https://github.com/nathos/sass-textmate-bundle">Sass</a> Sass的高亮, 补全...</li>
<li><a href="http://xavura.github.io/CoffeeScript-Sublime-Plugin/">CoffeeScript</a>  CoffeeScript高亮,补全, Compile等...</li>
<li><a href="https://github.com/dzhibas/SublimePrettyJson">Pretty JSON</a> 经常看到一些个JSON文件一坨坨的, 有了这货看着也舒服多了</li>
<li><a href="https://github.com/uipoet/sublime-jshint">JSHint</a> 检查Javascript的语法规范, 要先在装了node, 然后<code>npm install -g jshint</code></li>
<li><a href="http://emmet.io/">Emmet</a> 前身Zen Coding, 貌似所有的packages之中排在最前的. 几乎被吹捧成为神器中的神器了.</li>
<li><a href="">HTMLpretty</a> 个人觉得解决缩进等格式问题的神器, 好吧, 即使木有这个偶本身也是具有良好编码规范的.</li>
<li><a href="https://github.com/kemayo/sublime-text-2-git">Git</a></li>
<li><a href="https://github.com/sokolovstas/SublimeWebInspector">Web Inspector</a> 纯属贪新鲜装上耍耍, 取代浏览器的inspector不太可能.</li>
<li><a href="https://github.com/eddorre/SublimeERB">ERB Insert and Toggle Commands</a> 快速输入<code>&lt;%= %&gt;</code>或者<code>&lt;% %&gt;</code></li>
<li><a href="https://github.com/dotty/HackerNews-SublimeTextPlugin">Hacker News</a> 不常用, 而且要自己改改shortcut, 否则会占用了显隐侧边栏的快捷键.</li>
<li><a href="https://github.com/aziz/PlainTasks">PlainTasks</a> TODO插件一枚. 配合Sublime的各种快捷键各种操控很nice</li>
</ul>


<h2>Settings-User</h2>

<p>先把custom的show一下, 也没啥的, 都是些无关痛痒的修改. 个人爱好吧. 有个必须有的就是<code>"scroll_past_end": true,</code> 经常写了一大车页面布满了, 下面的就滚不起来, 眼睛老要往下瞄很不爽. 设置以后就可以自由控制底部显示.<br/>
基本上自己看着Settings - Default 还是老规矩按需修改啦.</p>

<p>```javascript
{</p>

<pre><code>"theme": "Flatland.sublime-theme",
"color_scheme": "Packages/Theme - Flatland/Flatland.tmtheme",
"tab_size": 2,
"font_options":
[
    "bold"
],
"font_face": "Courier New",
"font_size": 20.0,
"bold_folder_labels": true,
"hot_exit": false,
"open_files_in_new_window": false,
"create_window_at_startup": false,
"scroll_past_end": true,
"wide_caret": true
</code></pre>

<p>}
```</p>

<h2>Key Bindings - User</h2>

<p>快捷键同样跟Settings可以多看Default绝对比看路边3322的像我这些要靠谱, 完整的多. 忘了在哪学到的<code>{ "keys": ["ctrl+command+r"], "command": "reveal_in_side_bar" }</code> 挺实用的, 直接在侧边栏显示当前的文件所在的目录.</p>

<p><code>javascript
[
  { "keys": ["ctrl+command+r"], "command": "reveal_in_side_bar" },
  { "keys": ["command+shift+."], "command": "erb" },
  { "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" }
]
</code></p>

<h2>Shortcut</h2>

<p>列一些个老是忘记用快捷键的操作, (有时候又无故发现一些快捷键)</p>

<p>```
focus到侧边栏: 'ctrl + 0'
Command + D：选择词。重复按下可以增加选择下一相同的词。按下 Ctrl + Command + G 可选中所有相同的词。
Command + Option + /：块注释。
Control + M：跳转到对应的括号。
Control + Shift + M：选中当前括号内的内容，重复按下可增加选择括号本身。
Command + Shift + J：选中当前缩进级别下的所有代码。
Command + Option + .：闭合 HTML 标签。(说常用也不常用, 但又貌似有用)
按住option 拖拽多列
按下 Control + Shift + 方向键，可以选中矩形区域的文本。
选择数行文本末端，选中区域然后按下 Shift + Command + L。</p>

<p>```</p>

<h2>PS:</h2>

<p>官方的symlink貌似有点不妥,</p>

<p>```
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl</p>

<p>```</p>

<p>稍作修改为:</p>

<p>```
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
